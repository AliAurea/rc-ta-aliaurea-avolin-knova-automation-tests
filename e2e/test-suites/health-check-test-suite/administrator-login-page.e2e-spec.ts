import { StepLogger } from '../../../core/logger/step-logger';
import { AlertHelper } from '../../components/html/alert-helper';
import { PageHelper } from '../../components/html/page-helper';
import { CredentialsHelper } from '../../components/misc-utils/credentials-helper';
import { EndpointHelper } from '../../components/misc-utils/endpoint-helper';
import { ValidationsHelper } from '../../components/misc-utils/validation-helper';
import { AdminHomePageHelper } from '../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminHomePage } from '../../page-objects/pages/admin-home-page/admin-home.po';
import { AdminLoginPageConstant } from '../../page-objects/pages/admin-login-page/admin-login.constants';
import { AdminLoginPageHelper } from '../../page-objects/pages/admin-login-page/admin-login.helper';
import { AdminLoginPage } from '../../page-objects/pages/admin-login-page/admin-login.po';
import { SuiteNames } from '../helpers/suite-names';

describe(SuiteNames.healthCheckSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;
    const user = CredentialsHelper.admin;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-90
    it('Login to Knova Administrator portal with a valid admin username and valid password - [22308069]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 21:58:40 GMT
        StepLogger.caseId = 22308069;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step(`Open web browser and navigate to the QA URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input the Username value in the username textbox e.g. admin');
        StepLogger.verification('The inputted value should display in the Username textbox');
        await AdminLoginPageHelper.enterAndVerifyUserName(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Input the Password value in the "Password" textbox');
        StepLogger.verification('The inputted value should be masked');
        await AdminLoginPageHelper.enterAndVerifyPassword(user.password);

        StepLogger.stepId(4);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('The Administrator user should be logged in successfully');
        await AdminHomePage.hamburgerIcon.verifyDisplayedStatus();

        StepLogger.stepId(5);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);
    });

    // Jira References - KNOV-90
    it('Login to Knova Administrator portal with an invalid username and valid password - [22308072]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:12:08 GMT
        const invalidUsername = await PageHelper.getUniqueId();
        StepLogger.caseId = 22308072;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step('Open web browser and navigate to the QA ' +
            `URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input an invalid Username value in the username textbox e.g. admins');
        StepLogger.verification('The inputted value is displayed in the Username textbox');
        await AdminLoginPageHelper.enterAndVerifyUserName(invalidUsername);
        StepLogger.stepId(3);
        StepLogger.step('Input the valid Password value in the password textbox e.g. admin');
        StepLogger.verification('The inputted value is masked in the Password textbox');
        await AdminLoginPageHelper.enterAndVerifyPassword(user.password);
        StepLogger.stepId(4);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('An Alert page is opened with the message "Login Error! Ensure your ' +
            'user name and password are correct and try again."');
        await ValidationsHelper.getAlertHasMessage(AdminLoginPageConstant.messages.loginError);
        StepLogger.stepId(5);
        StepLogger.step('Click the "OK" button on the Alert page');
        await AlertHelper.acceptAlert();
        StepLogger.verification('The Knova Logon page is displayed');
        await AdminLoginPage.loginForm.login.verifyPresentStatus();

        StepLogger.stepId(6);
        StepLogger.step('Verify the user is not logged in to the Administrator Portal');
        StepLogger.verification('The user is not logged in to the Knova Administrator Portal');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-90
    it('Login to Knova Administrator portal with a valid username and invalid password - [22308075]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:27:32 GMT
        const invalidPassword = await PageHelper.getUniqueId();
        StepLogger.caseId = 22308075;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step('Open web browser and navigate to the QA ' +
            `URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input the valid Username value in the username textbox e.g. admin');
        StepLogger.verification('The inputted value should display in the Username textbox');
        await AdminLoginPageHelper.enterAndVerifyUserName(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Input the invalid Password value in the "Password" textbox');
        StepLogger.verification('The inputted value should be masked');
        await AdminLoginPageHelper.enterAndVerifyPassword(invalidPassword);

        StepLogger.stepId(4);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('An Alert page is opened with the message ' +
            '"Login Error! Ensure your user name and password are correct and try again."');
        await ValidationsHelper.getAlertHasMessage(AdminLoginPageConstant.messages.loginError);

        StepLogger.stepId(5);
        StepLogger.step('Click the "OK" button on the Alert page');
        await AlertHelper.acceptAlert();
        StepLogger.verification('The Knova Logon page is displayed');
        await AdminLoginPage.loginForm.login.verifyPresentStatus();

        StepLogger.stepId(6);
        StepLogger.step('Verify the user is not logged in to the Administrator Portal');
        StepLogger.verification('The user is not logged in to the Knova Administrator Portal');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-90
    it('Login Knova Administrator portal with a blank username and password field - [22308080]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:32:26 GMT
        StepLogger.caseId = 22308080;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step('Open web browser and navigate to the QA ' +
        `URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('An Alert page is opened with the message ' +
            '"Login Error! Ensure your user name and password are correct and try again."');
        await ValidationsHelper.getAlertHasMessage(AdminLoginPageConstant.messages.loginError);

        StepLogger.stepId(3);
        StepLogger.step('Click the "OK" button on the Alert page');
        await AlertHelper.acceptAlert();
        StepLogger.verification('The Knova Logon page is displayed');
        await AdminLoginPage.loginForm.login.verifyPresentStatus();

        StepLogger.stepId(4);
        StepLogger.step('Verify the user is not logged in to the Administrator Portal');
        StepLogger.verification('The user is not logged in to the Knova Administrator Portal');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-90
    it('Login Knova Administrator portal with a blank username field and a valid password - [22308081]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:37:25 GMT
        StepLogger.caseId = 22308081;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step('Open web browser and navigate to the QA ' +
            `URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input the valid Password value in the password textbox e.g. admin');
        StepLogger.verification('The inputted value is masked in the Password textbox');
        await AdminLoginPageHelper.enterAndVerifyPassword(user.password);

        StepLogger.stepId(3);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('An Alert page is opened with the message ' +
            '"Login Error! Ensure your user name and password are correct and try again."');
        await ValidationsHelper.getAlertHasMessage(AdminLoginPageConstant.messages.loginError);

        StepLogger.stepId(4);
        StepLogger.step('Click the "OK" button on the Alert page');
        await AlertHelper.acceptAlert();
        StepLogger.verification('The Knova Logon page is displayed');
        await AdminLoginPage.loginForm.login.verifyPresentStatus();

        StepLogger.stepId(5);
        StepLogger.step('Verify the user is not logged in to the Administrator Portal');
        StepLogger.verification('The user is not logged in to the Knova Administrator Portal');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-90
    it('Login to Knova Administrator portal with a valid username and blank password field - [22308083]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:46:07 GMT
        StepLogger.caseId = 22308083;

        // Step 1 is covered in the beforeAll block
        StepLogger.stepId(1);
        StepLogger.step('Open web browser and navigate to the QA ' +
            `URL e.g. ${EndpointHelper.home}`);
        StepLogger.verification('The Knova Logon page should be displayed');
        await AdminLoginPage.loginForm.login.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input a valid Username value in the username textbox e.g. admin');
        StepLogger.verification('The inputted value is displayed in the Username textbox');
        await AdminLoginPageHelper.enterAndVerifyUserName(user.username);

        StepLogger.stepId(3);
        StepLogger.step('Click on "Login" button');
        await AdminLoginPage.loginForm.login.clickButton();
        StepLogger.verification('An Alert page is opened with the message ' +
            '"Login Error! Ensure your user name and password are correct and try again."');
        await ValidationsHelper.getAlertHasMessage(AdminLoginPageConstant.messages.loginError);

        StepLogger.stepId(4);
        StepLogger.step('Click the "OK" button on the Alert page');
        await AlertHelper.acceptAlert();
        StepLogger.verification('The Knova Logon page is displayed');
        await AdminLoginPage.loginForm.login.verifyPresentStatus();

        StepLogger.stepId(5);
        StepLogger.step('Verify the user is not logged in to the Administrator Portal');
        StepLogger.verification('The user is not logged in to the Knova Administrator Portal');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the Menu Section in the LHS of the page - [22308085]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:50:09 GMT
        StepLogger.caseId = 22308085;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePage.sidebar.home.verifyDisplayedStatus();

        StepLogger.stepId(3);
        StepLogger.step(`Verify the following Menu Navigation items are displayed
        Home
        Manage Workbench
        Manage Communities
        Manage Knowledge
        Manage People
        Manage Site Experience
        Settings
        Logout`);
        StepLogger.verification('The Menu Navigation items are displayed on the LHS');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Home" section of the Menu section LHS of the page - [22308087]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 22:55:12 GMT
        StepLogger.caseId = 22308087;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePage.sidebar.home.verifyDisplayedStatus();

        // Step 3 verification is covered in step 4
        StepLogger.stepId(3);
        StepLogger.step('Click on the "Home" menu item icon');
        await AdminHomePageHelper.clickHomeButton();
        StepLogger.verification('The "Welcome to Knova Administrator!" page is displayed');

        StepLogger.stepId(4);
        StepLogger.step('Verify the "Home" page is displayed');
        StepLogger.verification('The Home page is displayed');
        await AdminHomePageHelper.verifyWelcomePage(true);
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Manage Workbench" section of the Menu section LHS of the page - [22308093]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 23:50:15 GMT
        StepLogger.caseId = 22308093;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage Workbench"');
        await AdminHomePageHelper.clickManageWorkbenchButton();
        StepLogger.verification(`A sub menu is opened with the following sub menu items
        "Interview Builder"
        "Resolution Flow Designer"
        "Master Email Template Builder"`);
        await AdminHomePageHelper.verifyManageWorkbenchSubMenu();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Manage Communities" section of the Menu section LHS of the page - [22308100]', async () => {
        // Auto generated by aurea-automation - util on Wed, 20 Feb 2019 12:29:19 GMT
        StepLogger.caseId = 22308100;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage Communities" on the LHS');
        await AdminHomePageHelper.clickManageCommunities();
        StepLogger.verification(`A sub menu should be displayed to the right of the Menu navigation on the right with the following sub menu list
        "Content Alert Manager"
        "Communities Manager"
        "Poll Manager"
        "Reward Points Manager"`);
        await AdminHomePageHelper.verifyManageCommunitiesSubMenu();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Manage Knowledge" section of the Menu section LHS of the page - [, 22308103]', async () => {
        // Auto generated by aurea-automation - util on Wed, 20 Feb 2019 13:23:17 GMT
        StepLogger.caseId = 22308103;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage Knowledge" menu item on the LHS');
        await AdminHomePage.sidebar.manageKnowledge.clickButton();
        StepLogger.verification(`The sub menu list for is displayed in the right side of the Menu List with the following sub menu list
        "Knowledge Model"
        "Knowledge Authoring"
        "Knowledge Contribution"`);
        await AdminHomePageHelper.verifyManageKnowledgeSubMenu();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Manage People" section of the Menu section LHS of the page - [22308104]', async () => {
        // Auto generated by aurea-automation - util on Wed, 20 Feb 2019 14:16:45 GMT
        StepLogger.caseId = 22308104;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage People" menu item on the LHS');
        await AdminHomePage.sidebar.managePeople.clickButton();
        StepLogger.verification(`The sub menu list is displayed for the menu item with the following sub menu
        "Agent Level Manager"
        "Enterprise Reputation Level Manager"
        "Group Creator"
        "User & Group Finder"
        "Role Manager (KKC)"
        "Role Manager (KSS)"
        "User Creator"`);
        await AdminHomePageHelper.verifyManagePeopleSubMenu();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Manage Site Experience" section of the Menu section LHS of the page - [22308107]', async () => {
        // Auto generated by aurea-automation - util on Wed, 20 Feb 2019 14:42:35 GMT
        StepLogger.caseId = 22308107;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage Site Experience" menu item on the LHS');
        await AdminHomePage.sidebar.manageSiteExp.hoverOverAndClick();
        StepLogger.verification(`The sub menu list should be displayed for the "Manage Site Experience"  menu item on the right with the following sub menu list
        "Saved Query Manager"
        "Agent Microsite"
        "Customer Microsite"
        "TD_Microsite"`);
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();
    });

    // Jira References - KNOV-90, KNOV-91
    it('View the "Administer Systems" section of the Menu section LHS of the page - [22308108]', async () => {
        // Auto generated by aurea-automation - util on Wed, 20 Feb 2019 14:53:22 GMT
        StepLogger.caseId = 22308108;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on Burger button in top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu Navigation is opened on the LHS of the page');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Administer Systems" menu item on the LHS of the page');
        await AdminHomePageHelper.clickAdministerSystem();
        StepLogger.verification(`The sub menu of the menu item is displayed for the "Administer Systems" ' +
        'menu with the following sub menu list
        "Analytics"
        "Configuration Settings"
        "Notifications and Subscriptions"
        "System Maintenance and Troubleshooting"
        "Transfer Data Manager"
        "Language Manager"
        "Change Log Viewer"`);
        await AdminHomePageHelper.verifyAdministerSystemSubMenu();
    });
});
