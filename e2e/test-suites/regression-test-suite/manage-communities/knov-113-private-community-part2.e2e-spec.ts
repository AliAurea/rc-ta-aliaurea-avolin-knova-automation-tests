import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { CommunitiesManagerConstant } from '../../../page-objects/pages/manage-communities/communities-manager/communities-manager.constants';
import { CommunitiesManagerHelper } from '../../../page-objects/pages/manage-communities/communities-manager/communities-manager.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1603
    it('Cancel editing the Properties of a Private Community - [22271701]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 13:07:00 GMT
        StepLogger.caseId = 22271701;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;
        const editName = `${communityName}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create Private Community');
        await CommunitiesManagerHelper.createPrivateCommunity(communityName);

        StepLogger.stepId(1);
        StepLogger.step('Click on the name of the Private Community record');
        await CommunitiesManagerHelper.clickCommunity(communityName);
        StepLogger.verification(`The Private Community record is highlighted and the following button is visible at the bottom of the page
            "Edit Properties"
            "Edit Visibility"
            "Edit Home Page Options"
            "Delete"`);
        await CommunitiesManagerHelper.verifyCommunityAndButtons(communityName);

        StepLogger.stepId(2);
        StepLogger.step('Click on "Edit Properties" button');
        await CommunitiesManagerHelper.clickEditPropertiesButton();
        StepLogger.verification('The Community Modal is opened with the details of the Private Community');
        await CommunitiesManagerHelper.verifyEditCommunityDialog(true);

        StepLogger.stepId(3);
        StepLogger.step('Edit the name value of the Public Community in the "Name" textbox');
        await CommunitiesManagerHelper.enterPrivateCommunityName(editName);
        StepLogger.verification('The Name value is changed in the "Name" textbox');
        await CommunitiesManagerHelper.verifyPrivateCommunityName(editName);

        StepLogger.stepId(4);
        StepLogger.step('Edit the Description text area');
        await CommunitiesManagerHelper.enterPrivateCommunityDescription(editName);
        StepLogger.verification('The Description value is changed');
        await CommunitiesManagerHelper.verifyPrivateCommunityDescription(editName);

        StepLogger.stepId(5);
        StepLogger.step('Click the "Cancel" button');
        await CommunitiesManagerHelper.clickPrivateCommunityCancelButton();
        StepLogger.verification('The Community modal pop up page is closed and the changes made are not saved');
        await CommunitiesManagerHelper.verifyEditedCommunity(communityName);

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName, false);
    });

    // Jira References - KNOV-1604
    it('Delete a Private Community record - [22271702]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 13:07:00 GMT
        StepLogger.caseId = 22271702;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create Private Community');
        await CommunitiesManagerHelper.createPrivateCommunity(communityName);

        StepLogger.stepId(1);
        StepLogger.step('Click on the name of the Private Community record');
        await CommunitiesManagerHelper.clickCommunity(communityName);
        StepLogger.verification(`The Private Community record is highlighted and the following button is visible at the bottom of the page
            "Edit Properties"
            "Edit Visibility"
            "Edit Home Page Options"
            "Delete"`);
        await CommunitiesManagerHelper.verifyCommunityAndButtons(communityName);

        StepLogger.stepId(2);
        StepLogger.step('Click on the "Delete" button');
        await CommunitiesManagerHelper.clickDeleteButton();
        StepLogger.verification('A pop up page is displayed with a message "This community and all it posts will be deleted. Continue?"');
        await CommunitiesManagerHelper.verifyDeleteWindow();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Yes" button');
        await CommunitiesManagerHelper.clickYesDeleteWindow();
        StepLogger.verification('The private community is deleted and remove from the list of the community');
        await CommunitiesManagerHelper.verifyCommunityDeleted(communityName);

        // Step 4 has been covered in Step 3
        StepLogger.stepId(4);
        StepLogger.step('Verify the Private Community name is removed from the list of Communities');
        StepLogger.verification('The Private Community is removed from the list of Communities');
    });

    // Jira References - KNOV-1605
    it('Cancel deleting a Private Community record - [22271703]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 13:07:00 GMT
        StepLogger.caseId = 22271703;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create Private Community');
        await CommunitiesManagerHelper.createPrivateCommunity(communityName);

        StepLogger.stepId(1);
        StepLogger.step('Click on the name of the Private Community record');
        await CommunitiesManagerHelper.clickCommunity(communityName);
        StepLogger.verification(`The Private Community record is highlighted and the following button is visible at the bottom of the page
            "Edit Properties"
            "Edit Visibility"
            "Edit Home Page Options"
            "Delete"`);
        await CommunitiesManagerHelper.verifyCommunityAndButtons(communityName);

        StepLogger.stepId(2);
        StepLogger.step('Click on the "Delete" button');
        await CommunitiesManagerHelper.clickDeleteButton();
        StepLogger.verification('A pop up page is displayed with a message "This community and all it posts will be deleted. Continue?"');
        await CommunitiesManagerHelper.verifyDeleteWindow();

        StepLogger.stepId(3);
        StepLogger.step('Click the "No" button');
        await CommunitiesManagerHelper.clickNoDeleteWindow();
        StepLogger.verification('The private community is not deleted and still exist in the community list');
        await CommunitiesManagerHelper.verifyEditedCommunity(communityName);

        // Step 4 has been covered in Step 3
        StepLogger.stepId(4);
        StepLogger.step('Verify the Private Community still exist on the Manage Communities page');
        StepLogger.verification('The Private Community is present on the list of Communities in the Manage Communities page');

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName, false);
    });

    // Jira References - KNOV-1606
    it('Cancel the creation a Private Community - [22271704]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 13:07:00 GMT
        StepLogger.caseId = 22271704;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Communities Manager');
        await CommunitiesManagerHelper.navigateToCommunitiesManager(true);

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Create Private Community" button at the bottom of the page');
        await CommunitiesManagerHelper.clickCreatePrivateCommunity();
        StepLogger.verification('The New Private Community creation Pop up page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(2);
        StepLogger.step('Input the name of the Community in the "Name" text box');
        await CommunitiesManagerHelper.enterPrivateCommunityName(communityName);
        StepLogger.verification('The Name value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityName(communityName);

        StepLogger.stepId(3);
        StepLogger.step('Input a value for description in the "Description" textarea');
        await CommunitiesManagerHelper.enterPrivateCommunityDescription(communityName);
        StepLogger.verification('The inputted value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityDescription(communityName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Moderator" button');
        await CommunitiesManagerHelper.clickSelectModeratorPrivate();
        StepLogger.verification('The Moderator selection modal is opened');
        await CommunitiesManagerHelper.verifyModeratorDialogPrivate();

        StepLogger.stepId(5);
        StepLogger.step('Click on the checkbox of the desired Moderator(s) and click "Ok" button');
        const moderator = await CommunitiesManagerHelper.selectModeratorAndClickOkPrivate();
        StepLogger.verification('The Selected Moderators are displayed on the New Private Community creation pop up page');
        await CommunitiesManagerHelper.verifySelectedModeratorPrivate(moderator);

        StepLogger.stepId(6);
        StepLogger.step('Click on the "Cancel" button');
        await CommunitiesManagerHelper.clickPrivateCommunityCancelButton();
        StepLogger.verification('The New Community creation modal is closed and the Public Community is not created');
        await CommunitiesManagerHelper.verifyCommunityDeleted(communityName);
    });

    // Jira References - KNOV-1607
    it('Create a Private Community with User(s) added - [22271713]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 14:03:12 GMT
        StepLogger.caseId = 22271713;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Communities Manager');
        await CommunitiesManagerHelper.navigateToCommunitiesManager(true);

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Create Private Community" button at the bottom of the page');
        await CommunitiesManagerHelper.clickCreatePrivateCommunity();
        StepLogger.verification('The New Private Community creation Pop up page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(2);
        StepLogger.step('Input the name of the Private Community in the "Name" text box');
        await CommunitiesManagerHelper.enterPrivateCommunityName(communityName);
        StepLogger.verification('The Name value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityName(communityName);

        StepLogger.stepId(3);
        StepLogger.step('Input a value for description in the "Description" textarea');
        await CommunitiesManagerHelper.enterPrivateCommunityDescription(communityName);
        StepLogger.verification('The inputted value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityDescription(communityName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Moderator" button');
        await CommunitiesManagerHelper.clickSelectModeratorPrivate();
        StepLogger.verification('The Moderator selection modal is opened');
        await CommunitiesManagerHelper.verifyModeratorDialogPrivate();

        StepLogger.stepId(5);
        StepLogger.step('Click on the checkbox of the desired Moderator(s) and click "Ok" button');
        const moderator = await CommunitiesManagerHelper.selectModeratorAndClickOkPrivate();
        StepLogger.verification('The Selected Moderators are displayed on the New Private Community creation pop up page');
        await CommunitiesManagerHelper.verifySelectedModeratorPrivate(moderator);

        StepLogger.stepId(6);
        StepLogger.step('Click on "Add User" on the New Private Community page');
        await CommunitiesManagerHelper.clickAddUserPrivate();
        StepLogger.verification('The "Select Users/Groups" page is opened');
        await CommunitiesManagerHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(7);
        StepLogger.step('Click the "Show All" button inside the "Find Users" section');
        await CommunitiesManagerHelper.clickShowAllUsers();
        StepLogger.verification('The list of all the User is displayed');
        await CommunitiesManagerHelper.verifyUsersList();

        StepLogger.stepId(8);
        StepLogger.step('Click on the Checkbox of the user(s) to add');
        const user = await CommunitiesManagerHelper.selectSearchedUser();
        StepLogger.verification('The User(s) selected is displayed in the "Selected Users & Groups" section of the page');
        await CommunitiesManagerHelper.verifySelectedUserGroup(user);

        StepLogger.stepId(9);
        StepLogger.step('Click "OK" button');
        await CommunitiesManagerHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The "Select Users/Groups" page is closed and the New Private Community page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(10);
        StepLogger.step('Click "Submit" button');
        await CommunitiesManagerHelper.clickPrivateCommunitySubmitButton();
        StepLogger.verification('The Private Community is created with the list of User');
        await CommunitiesManagerHelper.verifyCreatedCommunity(communityName);

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName);
    });

    // Jira References - KNOV-1608
    it('Create a Private Community with Group(s) added - [22271714]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 15:31:29 GMT
        StepLogger.caseId = 22271714;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Communities Manager');
        await CommunitiesManagerHelper.navigateToCommunitiesManager(true);

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Create Private Community" button at the bottom of the page');
        await CommunitiesManagerHelper.clickCreatePrivateCommunity();
        StepLogger.verification('The New Private Community creation Pop up page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(2);
        StepLogger.step('Input the name of the Private Community in the "Name" text box');
        await CommunitiesManagerHelper.enterPrivateCommunityName(communityName);
        StepLogger.verification('The Name value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityName(communityName);

        StepLogger.stepId(3);
        StepLogger.step('Input a value for description in the "Description" textarea');
        await CommunitiesManagerHelper.enterPrivateCommunityDescription(communityName);
        StepLogger.verification('The inputted value is displayed');
        await CommunitiesManagerHelper.verifyPrivateCommunityDescription(communityName);

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Moderator" button');
        await CommunitiesManagerHelper.clickSelectModeratorPrivate();
        StepLogger.verification('The Moderator selection modal is opened');
        await CommunitiesManagerHelper.verifyModeratorDialogPrivate();

        StepLogger.stepId(5);
        StepLogger.step('Click on the checkbox of the desired Moderator(s) and click "Ok" button');
        const moderator = await CommunitiesManagerHelper.selectModeratorAndClickOkPrivate();
        StepLogger.verification('The Selected Moderators are displayed on the New Private Community creation pop up page');
        await CommunitiesManagerHelper.verifySelectedModeratorPrivate(moderator);

        StepLogger.stepId(6);
        StepLogger.step('Click on "Add Users" on the New Private Community page');
        await CommunitiesManagerHelper.clickAddUserPrivate();
        StepLogger.verification('The "Select Users/Groups" page is opened');
        await CommunitiesManagerHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(7);
        StepLogger.step('Click the "Show All" button inside the "Find Groups" section');
        await CommunitiesManagerHelper.clickShowAllGroups();
        StepLogger.verification('The list of all Groups is displayed');
        await CommunitiesManagerHelper.verifyGroupList();

        StepLogger.stepId(8);
        StepLogger.step('Click on the Checkbox of the group(s) to add');
        const group = await CommunitiesManagerHelper.selectSearchedGroup();
        StepLogger.verification('The Group(s) selected is displayed in the "Selected Users & Groups" section of the page');
        await CommunitiesManagerHelper.verifySelectedUserGroup(group);

        StepLogger.stepId(9);
        StepLogger.step('Click "OK" button');
        await CommunitiesManagerHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The "Select Users/Groups" page is closed and the New Private Community page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(10);
        StepLogger.step('Click "Submit" button');
        await CommunitiesManagerHelper.clickPrivateCommunitySubmitButton();
        StepLogger.verification('The Private Community is created with the list of group');
        await CommunitiesManagerHelper.verifyCreatedCommunity(communityName);

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName);
    });

    // Jira References - KNOV-1610
    it('Add a User as a member of a Private Community without a User added initially - [22286620]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 22:10:36 GMT
        StepLogger.caseId = 22286620;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create Private Community');
        await CommunitiesManagerHelper.createPrivateCommunity(communityName);

        StepLogger.stepId(1);
        StepLogger.step('Click on the Private Community Record on the Manage Communities page');
        await CommunitiesManagerHelper.clickCommunity(communityName);
        StepLogger.verification(`The Private Community is highlighted and the following buttons are displayed at the bottom of the page
            "Edit Properties"
            "Edit Visibility"
            "Edit Home Page Options"
            "Delete"`);
        await CommunitiesManagerHelper.verifyCommunityAndButtons(communityName);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Edit Properties" button at the bottom of the page');
        await CommunitiesManagerHelper.clickEditPropertiesButton();
        StepLogger.verification('The Modal page of the Private Community is opened with the details of the Private Community');
        await CommunitiesManagerHelper.verifyEditCommunityDialog(true);

        StepLogger.stepId(3);
        StepLogger.step('Click on "Add Users" on the New Private Community page');
        await CommunitiesManagerHelper.clickAddUserPrivate();
        StepLogger.verification('The "Select Users/Groups" page is opened');
        await CommunitiesManagerHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(4);
        StepLogger.step('Click the "Show All" button inside the "Users" section');
        await CommunitiesManagerHelper.clickShowAllUsers();
        StepLogger.verification('The list of all the User is displayed');
        await CommunitiesManagerHelper.verifyUsersList();

        StepLogger.stepId(5);
        StepLogger.step('Click on the Checkbox of the user(s) to add');
        const user = await CommunitiesManagerHelper.selectSearchedUser();
        StepLogger.verification('The User(s) selected is displayed in the "Selected Users & Groups" section of the page');
        await CommunitiesManagerHelper.verifySelectedUserGroup(user);

        StepLogger.stepId(6);
        StepLogger.step('Click "OK" button');
        await CommunitiesManagerHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The "Select Users/Groups" page is closed and the New Private Community page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(7);
        StepLogger.step('Click "Submit" button');
        await CommunitiesManagerHelper.clickPrivateCommunitySubmitButton();
        StepLogger.verification('The Private Community is added with the list of User');
        await CommunitiesManagerHelper.verifyEditedCommunity(communityName);

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName, false);
    });

    // Jira References - KNOV-1611
    it('Add a Group as a member of a Private Community without a Group(s) added initially - [22286621]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 22:26:02 GMT
        StepLogger.caseId = 22286621;
        const communityName = `${CommunitiesManagerConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create Private Community');
        await CommunitiesManagerHelper.createPrivateCommunity(communityName);

        StepLogger.stepId(1);
        StepLogger.step('Click on the Private Community Record on the Manage Communities page');
        await CommunitiesManagerHelper.clickCommunity(communityName);
        StepLogger.verification(`The Private Community is highlighted and the following buttons are displayed at the bottom of the page
            "Edit Properties"
            "Edit Visibility"
            "Edit Home Page Options"
            "Delete"`);
        await CommunitiesManagerHelper.verifyCommunityAndButtons(communityName);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Edit Properties" button at the bottom of the page');
        await CommunitiesManagerHelper.clickEditPropertiesButton();
        StepLogger.verification('The Modal page of the Private Community is opened with the details of the Private Community');
        await CommunitiesManagerHelper.verifyEditCommunityDialog(true);

        StepLogger.stepId(3);
        StepLogger.step('Click on "Add Users" on the New Private Community page');
        await CommunitiesManagerHelper.clickAddUserPrivate();
        StepLogger.verification('The "Select Users/Groups" page is opened');
        await CommunitiesManagerHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(4);
        StepLogger.step('Click the "Show All" button inside the "Find Groups" section');
        await CommunitiesManagerHelper.clickShowAllGroups();
        StepLogger.verification('The list of all Groups is displayed');
        await CommunitiesManagerHelper.verifyGroupList();

        StepLogger.stepId(5);
        StepLogger.step('Click on the Checkbox of the Group(s) to add');
        const group = await CommunitiesManagerHelper.selectSearchedGroup();
        StepLogger.verification('The Group(s) selected is displayed in the "Selected Users & Groups" section of the page');
        await CommunitiesManagerHelper.verifySelectedUserGroup(group);

        StepLogger.stepId(6);
        StepLogger.step('Click "OK" button');
        await CommunitiesManagerHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The "Select Users/Groups" page is closed and the New Private Community page is displayed');
        await CommunitiesManagerHelper.verifyNewCommunityDialog(true);

        StepLogger.stepId(7);
        StepLogger.step('Click "Submit" button');
        await CommunitiesManagerHelper.clickPrivateCommunitySubmitButton();
        StepLogger.verification('The Private Community is created with the list of group');
        await CommunitiesManagerHelper.verifyEditedCommunity(communityName);

        StepLogger.postCondition('Delete community');
        await CommunitiesManagerHelper.deleteCommunity(communityName, false);
    });
});
