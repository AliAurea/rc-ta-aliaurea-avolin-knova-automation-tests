import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminHomePage } from '../../../page-objects/pages/admin-home-page/admin-home.po';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { ContentAlertManagerConstant } from '../../../page-objects/pages/manage-communities/content-alert-manager/content-alert-manager.constants';
import { ContentAlertManagerHelper } from '../../../page-objects/pages/manage-communities/content-alert-manager/content-alert-manager.helper';
import { ContentAlertManagerPage } from '../../../page-objects/pages/manage-communities/content-alert-manager/content-alert-manager.po';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;
    const random = PageHelper.getUniqueId();
    const text = `${ContentAlertManagerConstant.textArea.test}${random}`;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-729
    it('To access content alert manager section. - [22324754]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 08:33:38 GMT
        StepLogger.caseId = 22324754;

        StepLogger.stepId(1);
        StepLogger.step('Click on the options icon (3 lines at the top left corner).');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification(`The following options should be displayed.
            -Home
            -Manage workbench
            -Manage communities
            -Manage Knowledge
            -Manage People
            -Settings
            -Logout`);
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Manage communities.');
        await AdminHomePageHelper.clickManageCommunities();
        StepLogger.verification(`Following options should be displayed.
            -Content Alert Manager
            -Communities Manager
            -Poll Manager
            -Reward Points Manager`);
        await AdminHomePageHelper.verifyManageCommunitiesMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on Content Alert Manager.');
        await AdminHomePageHelper.clickManageCommunitiesSubMenu(AdminHomePage.manageCommunities.contentAlertManager);
        StepLogger.verification(`Content Alert Manager section should be displayed with the following 3 levels to identify offensive terminology check.
            -Automatic rejection-Exact and partial match
            -High alert-Exact and partial match
            -Medium Alert-Exact and partial match`);
        await ContentAlertManagerHelper.verifyPageContent();

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-736
    it('To select the language for which the terms need to be added. - [22325035]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 10:31:57 GMT
        StepLogger.caseId = 22325035;
        const languageDropdown = ContentAlertManagerPage.languageDropdown;

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to top top right section of the page.');
        StepLogger.verification('language drop down should be displayed.');
        await languageDropdown.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Click on the arrow of the language drop down.');
        await languageDropdown.clickButton();
        StepLogger.verification('Different language options should be available.');
        await ContentAlertManagerHelper.verifyLanguages();

        StepLogger.stepId(3);
        StepLogger.step('Select one of the languages in which the words have to be added.');
        await ContentAlertManagerPage
            .getLanguageOptions(ContentAlertManagerConstant.languageDropdown.english)
            .clickButton();
        StepLogger.verification(`The language should be selected successfully. Now the words of that language can be added in the list for rejection,
            high alert or medium alert.`);
        await ContentAlertManagerHelper.verifySelectedLanguage(ContentAlertManagerConstant.languageDropdown.english);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-730
    it('To add a term for automatic rejection- Exact match - [22324759]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 11:27:11 GMT
        StepLogger.caseId = 22324759;
        const textArea = ContentAlertManagerConstant.textArea;
        const level1Exact = ContentAlertManagerPage.getTextArea(textArea.level1Exact);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to automatic rejection-exact match section.
            Provide a word in the field (full word has to match for rejection)`);
        await ContentAlertManagerHelper.enterWordInTextArea(level1Exact, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level1Exact.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel1Exact.clickButton();
        StepLogger.verification('The word should be added in the list.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level1ExactSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level1ExactSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-731
    it('To add a term for automatic rejection- Partial match - [22324866]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 12:14:56 GMT
        StepLogger.caseId = 22324866;
        const textArea = ContentAlertManagerConstant.textArea;
        const level1Partial = ContentAlertManagerPage.getTextArea(textArea.level1Partial);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to automatic rejection-partial match section.
            Provide a word in the field (the word has to match partially for rejection)`);
        await ContentAlertManagerHelper.enterWordInTextArea(level1Partial, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level1Partial.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel1Partial.clickButton();
        StepLogger.verification('The word should be added in the list and should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level1PartialSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level1PartialSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-732
    it('To add a term for high alert- Exact match - [22324930]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 12:33:40 GMT
        StepLogger.caseId = 22324930;
        const textArea = ContentAlertManagerConstant.textArea;
        const level2Exact = ContentAlertManagerPage.getTextArea(textArea.level2Exact);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to high alert-exact match section.
            Provide a word in the field (full word has to match for high alert)`);
        await level2Exact.scrollToElement();
        await ContentAlertManagerHelper.enterWordInTextArea(level2Exact, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level2Exact.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel2Exact.clickButton();
        StepLogger.verification('The word should be added in the list and should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level2ExactSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level2ExactSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-733
    it('To add a term for high alert- Partial match - [22324932]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 12:46:12 GMT
        StepLogger.caseId = 22324932;
        const textArea = ContentAlertManagerConstant.textArea;
        const level2Partial = ContentAlertManagerPage.getTextArea(textArea.level2Partial);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to high alert-partial match section.
            Provide a word in the field (the word has to match partially for high alert)`);
        await level2Partial.scrollToElement();
        await ContentAlertManagerHelper.enterWordInTextArea(level2Partial, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level2Partial.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel2Partial.clickButton();
        StepLogger.verification('The word should be added in the list and should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level2PartialSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level2PartialSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-734
    it('To add a term for medium alert- Exact match - [22324937]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 12:54:38 GMT
        StepLogger.caseId = 22324937;
        const textArea = ContentAlertManagerConstant.textArea;
        const level3Exact = ContentAlertManagerPage.getTextArea(textArea.level3Exact);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to medium alert-exact match section.
            Provide a word in the field (full word has to match for medium alert)`);
        await level3Exact.scrollToElement();
        await ContentAlertManagerHelper.enterWordInTextArea(level3Exact, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level3Exact.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel3Exact.clickButton();
        StepLogger.verification('The word should be added in the list and should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level3ExactSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level3ExactSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-735
    it('To add a term for medium alert- Partial match - [22324938]', async () => {
        // Auto generated by aurea-automation - util on Tue, 19 Feb 2019 13:01:40 GMT
        StepLogger.caseId = 22324938;
        const textArea = ContentAlertManagerConstant.textArea;
        const level3Partial = ContentAlertManagerPage.getTextArea(textArea.level3Partial);

        StepLogger.preCondition('Access the content alert manager section');
        await ContentAlertManagerHelper.navigateToContentAlertManager();

        StepLogger.stepId(1);
        StepLogger.step(`Go to medium alert-partial match section.
            Provide a word in the field (the word has to match partially for rejection)`);
        await level3Partial.scrollToElement();
        await ContentAlertManagerHelper.enterWordInTextArea(level3Partial, text);
        StepLogger.verification('The value should be displayed in the field.');
        await level3Partial.verifyTextBoxContains(text);

        StepLogger.stepId(2);
        StepLogger.step('Click on Add.');
        await ContentAlertManagerPage.buttons.addLevel3Partial.clickButton();
        StepLogger.verification('The word should be added in the list and should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level3PartialSelect, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Submit button at the end if the page.');
        await ContentAlertManagerPage.buttons.submit.clickButton();
        StepLogger.verification('The word should be visible to the user.');
        await ContentAlertManagerHelper.verifyAddedWord(textArea.level3PartialSelect, text);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });
});
