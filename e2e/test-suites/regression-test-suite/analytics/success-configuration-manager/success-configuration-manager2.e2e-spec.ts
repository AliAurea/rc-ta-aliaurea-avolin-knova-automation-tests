import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { SuccessConfigurationManagerConstant } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.constants';
import { SuccessConfigurationManagerHelper } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.helper';
import { SuccessConfigurationManagerPage } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    it('To configure "Case Saved" attribute. - [22345377]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 12:26:26 GMT

        StepLogger.caseId = 22345377;
        const element = SuccessConfigurationManagerPage.resolutionFlow.caseSaved;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Case Saved" attribute drop down in "Resolution flow" section.');
        await SuccessConfigurationManagerHelper.clickOnCaseSaved();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyResolutionFlowDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Case Saved field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Collaboration Created" attribute. - [22345379]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 12:41:59 GMT

        StepLogger.caseId = 22345379;
        const element = SuccessConfigurationManagerPage.resolutionFlow.collaborationCreated;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;
        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Collaboration Created" attribute drop down in "Resolution flow" section.');
        await SuccessConfigurationManagerHelper.clickOnCollaborationCreated();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyResolutionFlowDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Collaboration Created field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "More than one Document viewed" attribute. - [22346596]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 05:57:24 GMT

        StepLogger.caseId = 22346596;
        const element = SuccessConfigurationManagerPage.searchSection.viewedManyDocs;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;
        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "More than one Document viewed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnMoreThanOneDocmentViewed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the More than one Document viewed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Exactly one Document viewed" attribute. - [22346595]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 07:36:29 GMT

        StepLogger.caseId = 22346595;
        const element = SuccessConfigurationManagerPage.searchSection.viewedOneDoc;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;
        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Exactly one Document viewed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnExactlyOneDocumentViewed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Exactly one Document viewed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "No Documents viewed" attribute. - [22346592]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 07:45:39 GMT

        StepLogger.caseId = 22346592;
        const element = SuccessConfigurationManagerPage.searchSection.viewedNoDocs;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;
        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "No Documents viewed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnNoDocumentViewed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the No Documents viewed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });
});
