import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { SuccessConfigurationManagerConstant } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.constants';
import { SuccessConfigurationManagerHelper } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.helper';
import { SuccessConfigurationManagerPage } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    it('To configure "Solved" clicked; no Document created or linked" attribute. - [22346597]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 10:46:40 GMT

        StepLogger.caseId = 22346597;
        const element = SuccessConfigurationManagerPage.workbenchSection.noNewDocumentCreatedOrLinked;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Solved" clicked; no Document created or linked" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnNoDocumentCreatedOrLinked();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Solved" clicked; no Document created or linked field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure ""Solved" clicked; Document created or linked" attribute. - [22346598]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 12:26:05 GMT

        StepLogger.caseId = 22346598;
        const element = SuccessConfigurationManagerPage.workbenchSection.newDocumentCreatedOrLinked;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the ""Solved" clicked; Document created or linked" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnNoDocumentCreatedOrLinked();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the "Solved" clicked; Document created or linked field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure ""Save for Later" clicked" attribute. - [22346599]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 12:41:32 GMT

        StepLogger.caseId = 22346599;
        const element = SuccessConfigurationManagerPage.workbenchSection.saveForLater;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the ""Save for Later" clicked" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnSaveForLater();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the "Save for Later" clicked field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "New Document created" attribute. - [22346601]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 12:50:44 GMT

        StepLogger.caseId = 22346601;
        const element = SuccessConfigurationManagerPage.workbenchSection.newDocumentCreated;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "New Document created" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnNewDocumentCreated();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the New Document created field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure ""Not Solved" clicked" attribute. - [22346606]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 12:59:11 GMT

        StepLogger.caseId = 22346606;
        const element = SuccessConfigurationManagerPage.workbenchSection.notSolved;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the ""Not Solved" clicked" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnNotSolved();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the "Not Solved" clicked field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Information Component selected" attribute. - [22346607]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 13:07:40 GMT

        StepLogger.caseId = 22346607;
        const element = SuccessConfigurationManagerPage.workbenchSection.icSelected;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Information Component selected" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnIcSelected();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Information Component selected field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Email sent" attribute. - [22346608]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 13:11:55 GMT

        StepLogger.caseId = 22346608;
        const element = SuccessConfigurationManagerPage.workbenchSection.emailSent;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Email sent" attribute drop down in "Workbench" section.');
        await SuccessConfigurationManagerHelper.clickOnEmailSent();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyWorkbenchDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Email sent field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });
});
