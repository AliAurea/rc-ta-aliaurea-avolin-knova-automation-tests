import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { CredentialsHelper } from '../../../../components/misc-utils/credentials-helper';
import { AdminHomePageHelper } from '../../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminHomePage } from '../../../../page-objects/pages/admin-home-page/admin-home.po';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { SuccessConfigurationManagerConstant } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.constants';
import { SuccessConfigurationManagerHelper } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.helper';
import { SuccessConfigurationManagerPage } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    it('To access Success Configuration Manager section. - [22345210]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 07:43:26 GMT

        StepLogger.caseId = 22345210;
        StepLogger.preCondition('Execute test case C22308069 to login.');
        await AdminLoginPageHelper.loginAsAdmin();
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(1);
        StepLogger.step('Click on the options icon (3 lines at the top left corner).');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification(`The following options should be displayed.
        -Home
        -Manage workbench
        -Manage communities
        -Manage Knowledge
        -Manage People
        -Manage Site Experience
        -Administer System
        -Settings
        -Logout`);
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Administer System.');
        await AdminHomePageHelper.clickAdministerSystem();
        StepLogger.verification('List of options should be displayed.');
        await AdminHomePageHelper.verifyAdministerSystemSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on Analytics.');
        await AdminHomePage.administerSystem.analytics.hoverOverAndClick();
        StepLogger.verification('List of options should be displayed.');
        await AdminHomePageHelper.verifyAnalyticsSubMenu();

        StepLogger.stepId(4);
        StepLogger.step('Click on Success configuration manager.');
        await AdminHomePage.administerSystem.successConfManager.hoverOverAndClick();
        StepLogger.verification(`Success configuration manager page should be displayed with following topics.
        -General
        -Resolution Flow
        -Search
        -Workbench
        -Communities
        -Home/Browse`);
        await SuccessConfigurationManagerHelper.verifyNavigation();
    });

    // Jira References - KNOV-94
    it('To configure "Content rated High" attribute. - [22345360]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 08:39:20 GMT

        StepLogger.caseId = 22345360;
        const element = SuccessConfigurationManagerPage.generalSection.high;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Content rated High" attribute drop down in "General" section.');
        await SuccessConfigurationManagerHelper.clickOnContentRatedHigh();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyGeneralDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Content rated High field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Content rated Low" attribute. - [22345374]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 11:38:04 GMT

        StepLogger.caseId = 22345374;
        const element = SuccessConfigurationManagerPage.generalSection.low;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Content rated Low" attribute drop down in "General" section.');
        await SuccessConfigurationManagerHelper.clickOnContentRatedLow();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyGeneralDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Content rated Low field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure ""Case Resolved" clicked" attribute. - [22345375]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 11:47:01 GMT

        StepLogger.caseId = 22345375;
        const element = SuccessConfigurationManagerPage.resolutionFlow.caseResolved;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the ""Case Resolved" clicked" attribute drop down in "Resolution Flow" section.');
        await SuccessConfigurationManagerHelper.clickOnCaseResolved();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyResolutionFlowDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the "Case Resolved" clicked field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Case Escalated" attribute. - [22345376]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 12:12:36 GMT

        StepLogger.caseId = 22345376;
        const element = SuccessConfigurationManagerPage.resolutionFlow.caseEscalated;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Case Escalated" attribute drop down in "Resolution Flow" section.');
        await SuccessConfigurationManagerHelper.clickOnCaseEscalated();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifyResolutionFlowDropDownOptions();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Case Escalated field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });
});
