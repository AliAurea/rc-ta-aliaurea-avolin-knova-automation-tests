import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { SuccessConfigurationManagerConstant } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.constants';
import { SuccessConfigurationManagerHelper } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.helper';
import { SuccessConfigurationManagerPage } from '../../../../page-objects/pages/administer-system/analytics/success-configuration-manager/success-configuration-manager.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    it('To configure "User did nothing" attribute. - [22346575]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 16:46:27 GMT

        StepLogger.caseId = 22346575;
        const element = SuccessConfigurationManagerPage.searchSection.noActivity;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "User did nothing" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnUserDidNothing();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the User did nothing field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Document emailed" attribute. - [22346576]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 17:16:19 GMT

        StepLogger.caseId = 22346576;
        const element = SuccessConfigurationManagerPage.searchSection.emailedDocument;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Document emailed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnDocumentEmailed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Document emailed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Document saved" attribute. - [22346577]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 04:58:25 GMT

        StepLogger.caseId = 22346577;
        const element = SuccessConfigurationManagerPage.searchSection.savedDocument;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Document saved" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnDocumentSaved();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Document saved field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Search saved" attribute. - [22346580]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 05:26:06 GMT

        StepLogger.caseId = 22346580;
        const element = SuccessConfigurationManagerPage.searchSection.savedSearch;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Search saved" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnSearchSaved();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Search saved field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Best Bet accessed" attribute. - [22346583]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 05:35:52 GMT

        StepLogger.caseId = 22346583;
        const element = SuccessConfigurationManagerPage.searchSection.selectedBB;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Best Bet accessed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnBestBetAccessed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Best Bet accessed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Recommendation accessed" attribute. - [22346586]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 05:46:17 GMT

        StepLogger.caseId = 22346586;
        const element = SuccessConfigurationManagerPage.searchSection.selectedRecommendation;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Recommendation accessed" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnRecommendationAccessed();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Recommendation accessed field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Information Component selected" attribute. - [22346590]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 06:03:13 GMT

        StepLogger.caseId = 22346590;
        const element = SuccessConfigurationManagerPage.searchSection.selectedICs;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Information Component selected" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnInformationComponentSelected();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Information Component selected field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });

    it('To configure "Navigation Choice selected" attribute. - [22346588]', async () => {
        // Auto generated by aurea-automation - util on Fri, 08 Mar 2019 06:15:10 GMT

        StepLogger.caseId = 22346588;
        const element = SuccessConfigurationManagerPage.searchSection.selectedChoices;
        const value = SuccessConfigurationManagerConstant.generalSection.positiveValue;

        StepLogger.preCondition('Execute test case C22345210 to access "Success Configuration Manager" section.');
        await SuccessConfigurationManagerHelper.navigateToSuccessConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Navigation Choice selected" attribute drop down in "Search" section.');
        await SuccessConfigurationManagerHelper.clickOnNavigationChoiceSelected();
        StepLogger.verification(`Following options should be displayed.
        -Neg
        -N/A
        -Pos`);
        await SuccessConfigurationManagerHelper.verifySearchSectionDropDownProperties();

        StepLogger.stepId(2);
        StepLogger.step('Select one of the options from the drop down.');
        const text = await SuccessConfigurationManagerHelper.selectOptionFromDropDown(element, value);
        StepLogger.verification('The selection option should be displayed in the Navigation Choice selected field.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save at the bottom of the page.');
        await SuccessConfigurationManagerHelper.clickOnSaveButton();
        StepLogger.verification('The option should be saved.');
        await SuccessConfigurationManagerHelper.verifySelectedOptionFromDropDown(element, text);
    });
});
