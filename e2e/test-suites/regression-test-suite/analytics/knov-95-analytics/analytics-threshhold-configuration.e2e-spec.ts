import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { ThreshHoldConfigurationManagerConstant } from '../../../../page-objects/pages/administer-system/analytics/threshhold-configuration-manager/threshhold-configuration-manager.constants';
import { ThreshHoldConfigurationManagerHelper } from '../../../../page-objects/pages/administer-system/analytics/threshhold-configuration-manager/threshhold-configuration-manager.helper';
import { ThreshHoldConfigurationManagerPage } from '../../../../page-objects/pages/administer-system/analytics/threshhold-configuration-manager/threshhold-configuration-manager.po';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;
    const negativeNumber = ThreshHoldConfigurationManagerConstant.errorConditionTestData.minusFive;
    const tenLakh = ThreshHoldConfigurationManagerConstant.errorConditionTestData.tenLakh;
    const alphabets = ThreshHoldConfigurationManagerConstant.errorConditionTestData.alphabets;
    const specialCharacter = ThreshHoldConfigurationManagerConstant.errorConditionTestData.specialCharacter;
    const textBoxField = ThreshHoldConfigurationManagerPage.textBox;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-95
    it('To configure "Negative Feedback Threshold" attribute. - [22363143]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22363143;
        const uniqueNumber = await ThreshHoldConfigurationManagerHelper.getUniqueThreshHoldNumber(1);
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Negative Feedback Threshold" attribute.');
        StepLogger.verification('"Negative Feedback Threshold" attribute should be displayed.');
        await textBoxField.feedbacks.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a value in the field next to the attribute. The value can only be an integer ranging from 1 to 9999 ' +
            'and no decimal values allowed.');
        await textBoxField.feedbacks.sendKeys(uniqueNumber);
        StepLogger.verification('The value should be displayed in the field.');
        await textBoxField.feedbacks.verifyTextEntered(uniqueNumber);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save.');
        await ThreshHoldConfigurationManagerPage.buttons.save.hoverOverAndClick();
        StepLogger.verification('The value of the attribute should be saved.');
        await textBoxField.feedbacks.verifyTextEntered(uniqueNumber);

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it('To configure "Rating: High Threshold" attribute. - [22363157]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22363157;
        const uniqueNumber = await ThreshHoldConfigurationManagerHelper.getUniqueRatingValue(1);
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Rating: High Threshold" attribute.');
        StepLogger.verification('"Rating: High Threshold" attribute should be displayed.');
        await textBoxField.highRating.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a value in the field next to the attribute. The value can only be an integer ranging from 1 to 9999 ' +
            'and no decimal values allowed.');
        await textBoxField.highRating.sendKeys(uniqueNumber);
        StepLogger.verification('The value should be displayed in the field.');
        await textBoxField.highRating.verifyTextEntered(uniqueNumber);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save.');
        await ThreshHoldConfigurationManagerPage.buttons.save.hoverOverAndClick();
        StepLogger.verification('The value of the attribute should be saved.');
        await textBoxField.highRating.verifyTextEntered(uniqueNumber);

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it('To configure "Rating: Low Threshold" attribute. - [22363158]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:21 GMT

        StepLogger.caseId = 22363158;
        const uniqueNumber = await ThreshHoldConfigurationManagerHelper.getUniqueRatingValue(1);
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Rating: Low Threshold" attribute.');
        StepLogger.verification('"Rating: Low Threshold" attribute should be displayed.');
        await textBoxField.lowRating.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a value in the field next to the attribute. The value can only be an integer ranging from 1 to 9999 ' +
            'and no decimal values allowed.');
        await textBoxField.lowRating.sendKeys(uniqueNumber);
        StepLogger.verification('The value should be displayed in the field.');
        await textBoxField.lowRating.verifyTextEntered(uniqueNumber);

        StepLogger.stepId(3);
        StepLogger.step('Click on Save.');
        await ThreshHoldConfigurationManagerPage.buttons.save.hoverOverAndClick();
        StepLogger.verification('The value of the attribute should be saved.');
        await textBoxField.lowRating.verifyTextEntered(uniqueNumber);

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it(`To verify the error message when a negative value and a value more than 9999 is provided to
        Negative Feedback Threshold attribute field. - [22363225]`, async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22363225;
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Negative Feedback Threshold" attribute.');
        StepLogger.verification('"Negative Feedback Threshold" attribute should be displayed.');
        await textBoxField.feedbacks.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a negative value in the field next to the attribute. (For ex: -50)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.feedbacks, negativeNumber);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyErrorPopUpDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.stepId(4);
        StepLogger.step('Provide a value in the field next to the attribute which is more than 9999. (For ex: 1000001)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.feedbacks, tenLakh);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyErrorPopUpDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it(`To verify the error message when a negative value and a value more than 9999 is provided to
        Rating: High Threshold attribute field. - [22365690]`, async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:21 GMT

        StepLogger.caseId = 22365690;
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Rating: High Threshold" attribute.');
        StepLogger.verification('"Rating: High Threshold" attribute should be displayed.');
        await textBoxField.highRating.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a negative value in the field next to the attribute. (For ex: -50)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.highRating, negativeNumber);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.stepId(4);
        StepLogger.step('Provide a value in the field next to the attribute which is more than 9999. (For ex: 1000001)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.highRating, tenLakh);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it(`To verify the error message when a negative value and a value more than 9999 is provided to
        Rating: Low Threshold attribute field. - [22365691]`, async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22365691;
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Rating: Low Threshold" attribute.');
        StepLogger.verification('"Rating: Low Threshold" attribute should be displayed.');
        await textBoxField.lowRating.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide a negative value in the field next to the attribute. (For ex: -50)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.lowRating, negativeNumber);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.stepId(4);
        StepLogger.step('Provide a value in the field next to the attribute which is more than 9999. (For ex: 1000001)');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.lowRating, tenLakh);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it(`To verify the error message when alphabets or special characters are provided to
        Negative Feedback Threshold attribute field. - [22374993]`, async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22374993;
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Negative Feedback Threshold" attribute.');
        StepLogger.verification('"Negative Feedback Threshold" attribute should be displayed.');
        await textBoxField.feedbacks.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide any alphabetical value.');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.feedbacks, alphabets);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyErrorPopUpDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.stepId(4);
        StepLogger.step('Provide specials characters in the field.');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.feedbacks, specialCharacter);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyErrorPopUpDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-95
    it('To verify the error message when alphabets or special characters are provided to Rating: High Threshold attribute field. - [22375347]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 10:36:20 GMT

        StepLogger.caseId = 22375347;
        StepLogger.preCondition('Execute test case C22363137 to access Threshold Configuration Manager screen.');
        await ThreshHoldConfigurationManagerHelper.navigateToThreshholdConfManager();

        StepLogger.stepId(1);
        StepLogger.step('Go to "Rating: High Threshold" attribute.');
        StepLogger.verification('"Rating: High Threshold" attribute should be displayed.');
        await textBoxField.highRating.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Provide any alphabetical value.');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.highRating, alphabets);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.stepId(4);
        StepLogger.step('Provide specials characters in the field.');
        await ThreshHoldConfigurationManagerHelper.enterfieldValueAndClickSave(textBoxField.highRating, specialCharacter);
        StepLogger.verification('An error message should be displayed.');
        await ThreshHoldConfigurationManagerHelper.verifyRatingErrorPopUpDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on OK.');
        await ThreshHoldConfigurationManagerHelper.clickOk();
        StepLogger.verification('The error message should be closed.');
        await ThreshHoldConfigurationManagerHelper.verifyNavigation();

        StepLogger.postCondition('LogOut');
        await AdminLoginPageHelper.logout(true);
    });
});
