import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { Constants } from '../../../../components/misc-utils/constants';
import { RandomHelper } from '../../../../components/misc-utils/random-helper';
import { CommunitiesPageHelper } from '../../../../page-objects/pages/self-service/communities.helper';
import { SelfServiceHomePageHelper } from '../../../../page-objects/pages/self-service/self-service-home-page.helper';
import { SelfServiceLoginPageHelper } from '../../../../page-objects/pages/self-service/self-service-login.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: SelfServiceLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = SelfServiceLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await SelfServiceLoginPageHelper.logout();
        await SelfServiceLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1560
    it('Verify "New Post" button is available for admin user in the Communities Home page - [22938328]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 22:52:51 GMT

        StepLogger.caseId = 22938328;
        StepLogger.stepId(1);
        StepLogger.step('Click on "Communities" tab in the Home page');
        await CommunitiesPageHelper.clickOnCommunitiesTab();
        StepLogger.verification('User should get navigated to the Communities tab without errors');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify "New Post" button is available for user in the Communities Home page');
        StepLogger.verification('"New Post" button should be available for user to create a new post in the Communities Home page');
        await CommunitiesPageHelper.verifyNewPostButtonDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on "New Post" button');
        await CommunitiesPageHelper.clickOnNewPostButton();
        StepLogger.verification('User should get navigated to "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click on "Cancel" button in "Post a Question" page');
        await CommunitiesPageHelper.clickOnCancelButton();
        StepLogger.verification('User should get navigated back to the Communities Home page');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();
    });

    // Jira References - KNOV-1562
    it('Verify click on "Add" button under Details section displays Attachment editor to attach files to the New Post - [22938380]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 23:31:29 GMT

        StepLogger.caseId = 22938380;
        StepLogger.preCondition('Click on Comunities tab');
        await CommunitiesPageHelper.clickOnCommunitiesTab();

        StepLogger.stepId(1);
        StepLogger.step('Click on "New Post" button as specified in the Pre-condition [C22938328]');
        await CommunitiesPageHelper.clickOnNewPostButton();
        StepLogger.verification('User should get navigated to the "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Verify Add button is available for User under Details section');
        StepLogger.verification('Add Button should be available');
        await CommunitiesPageHelper.verifyAddButtonDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on Add Button');
        await CommunitiesPageHelper.clickOnAddButton();
        StepLogger.verification('Attachment Editor window should get displayed');
        await CommunitiesPageHelper.verifyEditorWindowDisplayedAdnCloseIt();

        // Step 4 is covered in step 3
        StepLogger.stepId(4);
        StepLogger.step('Click on "Cancel" button in the Attachment Editor window');
        StepLogger.verification('User should get navigated back to "Post a Question" page');
        await CommunitiesPageHelper.verifyPopupIsClosed();
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();
    });

    // Jira References - KNOV-1561
    it('Verify "New Post" button is available for admin user in the selected Community page - [22938336]', async () => {
        // Auto generated by aurea-automation - util on Wed, 06 Mar 2019 23:48:56 GMT

        StepLogger.caseId = 22938336;
        StepLogger.stepId(1);
        StepLogger.step('Click on "Communities" tab in the Home page');
        await CommunitiesPageHelper.clickOnCommunitiesTab();
        StepLogger.verification('User should get navigated to the Communities tab without errors');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on any of the Community Ex: TD_Private Community   in the "Browse Communities" section');
        const community = await CommunitiesPageHelper.clickOnRandomComunityLink();
        StepLogger.verification('User should get navigated to the selected Community successfully without errors');
        await CommunitiesPageHelper.verifyCommnityLinkDetailsDisplayed(community);

        StepLogger.stepId(3);
        StepLogger.step('Verify "New Post" button is available for user in the selected Community page');
        StepLogger.verification('"New Post" button should be available for user to create a new post in the selected Community page');
        await CommunitiesPageHelper.verifyNewPostButtonDisplayedInCommnityPage();

        StepLogger.stepId(4);
        StepLogger.step('Click on "New Post" button');
        await CommunitiesPageHelper.clickNewPostButtonDisplayedInCommnityPage();
        StepLogger.verification('User should get navigated to "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on "Cancel" button in "Post a Question" page');
        await CommunitiesPageHelper.clickOnCancelButton();
        StepLogger.verification('User should get navigated back to the Community page');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();
    });

    // Jira References - KNOV-1557
    it('Verify Admin user is able to navigate to a selected Community in the  Browse Communities Section of Communities tab - [22937683]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 00:29:29 GMT

        StepLogger.caseId = 22937683;

        // Step 1 is covered in BeforeEach
        StepLogger.stepId(1);
        StepLogger.step('Launch the Knova Self Service Portal with Admin Credentials as specified in the pre-condition [C22937176]');
        StepLogger.verification('Admin User should be able to login to the Knova Self Service Portal successfully');

        StepLogger.stepId(2);
        StepLogger.step('Click on "Communities" tab');
        await CommunitiesPageHelper.clickOnCommunitiesTab();
        StepLogger.verification('User should get navigated to the Communities tab without errors');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Observe that "Browse Communities" section displays all the available Communities');
        StepLogger.verification('"Browse Communities" section should displays all the available Communities');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Select a Community and click on its hyperlink');
        const community = await CommunitiesPageHelper.clickOnRandomComunityLink();
        StepLogger.verification('User should get navigated to the selected Community page successfully without errors');
        await CommunitiesPageHelper.verifyCommnityLinkDetailsDisplayed(community);
    });

    // Jira References - KNOV-1556
    it('Verify admin user is able to login to the Knova Self Service Portal successfully - [22937176]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 00:38:46 GMT

        StepLogger.caseId = 22937176;
        StepLogger.preCondition('Log out');
        await SelfServiceLoginPageHelper.logout();

        // Steps 1 and 2 are covered in step 3
        StepLogger.stepId(1);
        StepLogger.step(`Launch the Knova Self Service Portal URL in IE
        http://10.25.212.11:8080/selfservice/login.do`);
        StepLogger.verification('Knova Self Service Portal URL should be successfully launched');

        StepLogger.stepId(2);
        StepLogger.step(`Enter the below Credentials:
        User Name : admin
        Password : admin`);
        StepLogger.verification('User should be able to enter the given Admin Credentials in Knova Self Service Portal');

        StepLogger.stepId(3);
        StepLogger.step('Click on Login button');
        await SelfServiceLoginPageHelper.loginAsAdmin();
        StepLogger.verification('Admin User should be able to login successfully without errors');
        await SelfServiceHomePageHelper.verifyWelcomeLabelDisplayed();
    });

    // Jira References - KNOV-1571
    it('Verify admin user is able to submit a New Post without inputting Details field in the Post a Question page - [22938424]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:19 GMT

        StepLogger.caseId = 22938424;
        StepLogger.preCondition('Click on Comunities tab');
        await CommunitiesPageHelper.clickOnCommunitiesTab();

        StepLogger.stepId(1);
        StepLogger.step('Click on "New Post" button as specified in the Pre-condition [C22938328]');
        await CommunitiesPageHelper.clickOnNewPostButton();
        StepLogger.verification('User should get navigated to the "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step(`Input Subject in the "Post a Question" page
        Ex : Question on Knova application`);
        const subject = RandomHelper.getRandomString();
        await CommunitiesPageHelper.typeSubject(subject);
        StepLogger.verification('User should be able to input Subject in the "Post a Question" page');
        await CommunitiesPageHelper.verifySubjectFieldValue(subject);

        StepLogger.stepId(3);
        StepLogger.step(`Select Community for the New Post from "Community" field drop down in the "Post a Question" page
        Ex : -TD_Private Community`);
        const option = await CommunitiesPageHelper.selectCommunityDropdownOptionByIndex(Constants.number.two);
        StepLogger.verification('Community for the New Post should be selected from "Community" field drop down in the "Post a Question" page');
        await CommunitiesPageHelper.verifySelectedCommunityDropdownOption(option);

        StepLogger.stepId(4);
        StepLogger.step('Do no enter the Details in the "Post a Question" page and click on Continue button');
        await CommunitiesPageHelper.clickOnContinueButton();
        StepLogger.verification(`A "--Webpage dialog" message box gets displayed as
        "Please enter some details for this post"`);
        await CommunitiesPageHelper.verifyPleaseEnterSomeDetailsForThisPostMessageDisplayedAndCloseIt();

        // Step 5 is covered in step 4
        StepLogger.stepId(5);
        StepLogger.step('Click on "OK" on the Webpage Dialog message box');
        StepLogger.verification('User should get navigated back to "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(6);
        StepLogger.step('Enter Details in "Post a Question" page');
        const details = RandomHelper.getRandomString();
        await CommunitiesPageHelper.enterPostDetails(details);
        StepLogger.verification('User should be able to enter Details in "Post a Question" page');
        await CommunitiesPageHelper.verifyDetailsFieldValue(details);

        StepLogger.stepId(7);
        StepLogger.step('Click on "Continue" button after inputting Details field');
        await CommunitiesPageHelper.clickOnContinueButton();
        StepLogger.verification('User should get navigated to the "Preview and Submit Post" page successfully');
        await CommunitiesPageHelper.verifyPostPreviewPageDisplayed();
    });

    // Jira References - KNOV-1570
    it('Verify admin user is able to submit a New Post without inputting Subject field in the Post a Question page - [22938411]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:20 GMT

        StepLogger.caseId = 22938411;
        StepLogger.preCondition('Click on Comunities tab');
        await CommunitiesPageHelper.clickOnCommunitiesTab();

        StepLogger.stepId(1);
        StepLogger.step('Click on "New Post" button as specified in the Pre-condition [C22938328]');
        await CommunitiesPageHelper.clickOnNewPostButton();
        StepLogger.verification('User should get navigated to the "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Do no enter the Subject and click on Continue button');
        await CommunitiesPageHelper.enterComunityAndDetails();
        await CommunitiesPageHelper.clickOnContinueButton();
        StepLogger.verification(`A "--Webpage dialog" message box gets displayed as
        "Please enter a subject for this post"`);
        await CommunitiesPageHelper.verifyPleaseEnterASubjectForThisPostMessageDisplayedAndCloseIt();

        // Step 3 is covered in step 2
        StepLogger.stepId(3);
        StepLogger.step('Click on "OK" on the Webpage Dialog message box');
        StepLogger.verification('User should get navigated back to "Post a Question" page');
        await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Enter Subject in "Post a Question" page');
        const subject = await RandomHelper.getRandomString();
        await CommunitiesPageHelper.typeSubject(subject);
        StepLogger.verification('User should be able to enter Subject  in "Post a Question" page');
        await CommunitiesPageHelper.verifySubjectFieldValue(subject);

        StepLogger.stepId(5);
        StepLogger.step('Click on "Continue" button after inputting Subject field');
        await CommunitiesPageHelper.clickOnContinueButton();
        StepLogger.verification('User should get navigated to the "Preview and Submit Post" page successfully');
        await CommunitiesPageHelper.verifyPostPreviewPageDisplayed();
    });

    // Jira References - KNOV-1581
    it('Verify the "Show all" button in "My Most Recent Posts" section displays all the posts in the Communities Home page - [22946558]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:19 GMT

        StepLogger.caseId = 22946558;
        StepLogger.preCondition('Generate enough posts to be able to expand them and create a post');
        await CommunitiesPageHelper.generateEnoughRecentPosts();
        const post = await CommunitiesPageHelper.createPost();

        StepLogger.stepId(1);
        StepLogger.step(`Click on "Communities" tab after creation of new post as specified in the pre-condition
        [C22939486]`);
        await CommunitiesPageHelper.clickOnCommunitiesTab();
        StepLogger.verification('"Communities" tab should get displayed');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Go to "My Most Recent Posts" section at the bottom of the page');
        StepLogger.verification('User should be able to navigate to "My Most Recent Posts" section');
        await CommunitiesPageHelper.verifyMyMostRecentPostsSectionDisplayed();

        StepLogger.stepId(3);
        StepLogger.step(`Observe new post created in the pre-condition [C22939486] is displayed in the
        "My Most Recent Posts" section`);
        StepLogger.verification(`New post created in the pre-condition should get displayed in the
        "My Most Recent Posts" section`);
        await CommunitiesPageHelper.verifyRecentPostDisplayed(post);

        StepLogger.stepId(4);
        StepLogger.step('Verify "Show all" button is available in "My Most Recent Posts" section');
        StepLogger.verification('"Show all" button should be available in "My Most Recent Posts" section');
        await CommunitiesPageHelper.verifyShowAllLinkIsDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click on "Show all" button');
        await CommunitiesPageHelper.clickOnShowAllLink();
        StepLogger.verification('"My Most Recent Posts" section should get expanded showing all the posts');
        await CommunitiesPageHelper.verifyMostResentPostAreaExpanded();

        StepLogger.stepId(6);
        StepLogger.step('Observe "Show Fewer" button is displayed in the "My Most Recent Posts" section');
        StepLogger.verification('"Show Fewer" button should be displayed in the "My Most Recent Posts" expanded section');
        await CommunitiesPageHelper.verifyShowFewerLinkIsDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Click on "Show Fewer" button');
        await CommunitiesPageHelper.clickOnShowFewerLink();
        StepLogger.verification('Few posts of "My Most Recent Posts" section should get displayed with "Show all" button');
        await CommunitiesPageHelper.verifyShowAllLinkIsDisplayed();
    });

    // Jira References - KNOV-1576
    it(`Verify the Subject and Details entered in the "Post a Question page" gets displayed
    correctly in "Preview and Submit Post" page - [22939453]`, async () => {
            // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:19 GMT

            StepLogger.caseId = 22939453;
            StepLogger.preCondition('Create a post');
            const subject = RandomHelper.getRandomString();
            const details = RandomHelper.getRandomString();
            await CommunitiesPageHelper.createPostWithoutSubmittingIt(subject, details);

            // Step 1 is cevered in pre-condition
            StepLogger.stepId(1);
            StepLogger.step('User gets navigated to "Preview and Submit Page" as specified in Pre-condition C22939017');
            StepLogger.verification('User should be able to navigate to "Preview and Submit Page"');
            await CommunitiesPageHelper.verifyPostPreviewPageDisplayed();

            StepLogger.stepId(2);
            StepLogger.step('Verify the Subject displayed in "Preview and Submit Post" page is the same subject inputted in "Post a Question" page');
            StepLogger.verification('Subject of "Preview and Submit Post" page should be the same subject inputted in "Post a Question" page');
            await CommunitiesPageHelper.verifyPreviewPageSubject(subject);

            StepLogger.stepId(3);
            StepLogger.step('Verify the Details displayed in "Preview and Submit Post" page is the same details inputted in "Post a Question" page');
            StepLogger.verification('Details displayed in "Preview and Submit Post" page should be the same details inputted in "Post a Question" page');
            await CommunitiesPageHelper.verifyPreviewPageDetails(details);

            StepLogger.stepId(4);
            StepLogger.step('Click on "Submit" button in the "Preview and Submit Post" page');
            await CommunitiesPageHelper.clickOnSubmitButton();
            StepLogger.verification('New Post should get submitted successfully without errors in the Community page');
            await CommunitiesPageHelper.verifyPostLinkFromBrowsePage(subject);
        });

    // Jira References - KNOV-1578
    it('Verify the new post created is visible in the "My Most Recent Posts" section of Communities Homepage - [22939526]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:19 GMT

        StepLogger.caseId = 22939526;
        StepLogger.preCondition('Create a post');
        const post = await CommunitiesPageHelper.createPost();

        StepLogger.stepId(1);
        StepLogger.step(`Click on "Communities" tab after creation of new post as specified in the pre-condition
        [C22939486]`);
        await CommunitiesPageHelper.clickOnCommunitiesTab();
        StepLogger.verification('"Communities" tab should get displayed');
        await CommunitiesPageHelper.verifyCommunitiesHomeDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Go to "My Most Recent Posts" section at the bottom of the page');
        StepLogger.verification('User should be able to navigate to "My Most Recent Posts" section');
        await CommunitiesPageHelper.verifyMyMostRecentPostsSectionDisplayed();

        StepLogger.stepId(3);
        StepLogger.step(`Verify the new post created in the pre-condition [C22939486] is displayed in the
        "My Most Recent Posts" section`);
        StepLogger.verification(`New post created in the pre-condition [C22939486] should get displayed in the
        "My Most Recent Posts" section`);
        await CommunitiesPageHelper.verifyRecentPostDisplayed(post);

        StepLogger.stepId(4);
        StepLogger.step('Verify the Posted date displays Today"s date');
        StepLogger.verification('Posted date of new post should be Today"s date');
        await CommunitiesPageHelper.verifyPostDate(post);
    });

    // Jira References - KNOV-1577
    it('Verify admin user is able to submit a post in the "Preview and Submit Post" page successfully - [22939486]', async () => {
        // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:20 GMT

        StepLogger.caseId = 22939486;
        StepLogger.preCondition('Create a post');
        const post = await CommunitiesPageHelper.createPostWithoutSubmittingIt();

        // Step 1 is covered in pre-condition
        StepLogger.stepId(1);
        StepLogger.step('User gets navigated to "Preview and Submit Page" as specified in Pre-condition [C22939017]');
        StepLogger.verification('User should be able to navigate to "Preview and Submit Page"');
        await CommunitiesPageHelper.verifyPostPreviewPageDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Observe that Submit, Edit, Cancel buttons are displayed at the right corner');
        StepLogger.verification('Submit, Edit, Cancel buttons should be displayed at the right corner');
        await CommunitiesPageHelper.verifyPreviewPageButtons();

        StepLogger.stepId(3);
        StepLogger.step('Click on "Submit" button in the "Preview and Submit Post" page');
        await CommunitiesPageHelper.clickOnSubmitButton();
        StepLogger.verification('New Post should get submitted successfully without errors in the Community page');
        await CommunitiesPageHelper.verifyPostLinkFromBrowsePage(post);
    });

    // Jira References - KNOV-1580
    it(`Verify admin user can select another community from Community drop down in the
    Post a Question page navigated from selected community page - [22946549]`, async () => {
            // Auto generated by aurea-automation - util on Thu, 07 Mar 2019 10:59:20 GMT

            StepLogger.caseId = 22946549;

            StepLogger.stepId(1);
            StepLogger.step(`User should get navigated to the "Post a Question" page as specified in the pre-condition
        [C22938336]`);
            await CommunitiesPageHelper.clickOnCommunitiesTab();
            await CommunitiesPageHelper.clickOnNewPostButton();
            StepLogger.verification('User should be able to navigate to the "Post a Question" page of the selected Community');
            await CommunitiesPageHelper.verifyPostAQuestionPageDisplayed();

            StepLogger.stepId(2);
            StepLogger.step('Observe that the Community field dropdown displays the selected Community name by default');
            StepLogger.verification('Community field drop down should display the selected Community name by default');
            await CommunitiesPageHelper.verifyCommunityDropdownHasDefaultOption();

            StepLogger.stepId(3);
            StepLogger.step('Click on the Community field dropdown and select an other Community');
            const community = await CommunitiesPageHelper.selectCommunityDropdownOptionByIndex(Constants.number.three);
            StepLogger.verification('User should be able to select an other Community from Community field drop down');
            await CommunitiesPageHelper.verifySelectedCommunityDropdownOption(community);

            StepLogger.stepId(4);
            StepLogger.step(`Input Subject in the "Post a Question" page
        Ex : Question on Java application`);
            const subject = RandomHelper.getRandomString();
            await CommunitiesPageHelper.typeSubject(subject);
            StepLogger.verification('User should be able to input Subject in the "Post a Question" page');
            await CommunitiesPageHelper.verifySubjectFieldValue(subject);

            StepLogger.stepId(5);
            StepLogger.step('Input Details in the "Post a Question" page');
            const details = RandomHelper.getRandomString();
            await CommunitiesPageHelper.enterPostDetails(details);
            StepLogger.verification('User should be able to enter Details in the "Post a Question" page');
            await CommunitiesPageHelper.verifyDetailsFieldValue(details);

            StepLogger.stepId(6);
            StepLogger.step('Click on Continue button in the "Post a Question" page');
            await CommunitiesPageHelper.clickOnContinueButton();
            StepLogger.verification('User should get navigated to the Preview and Submit Post page successfully without errors');
            await CommunitiesPageHelper.verifyPostPreviewPageDisplayed();

            StepLogger.stepId(7);
            StepLogger.step('Click on Submit button in Preview and Submit Post page');
            await CommunitiesPageHelper.clickOnSubmitButton();
            StepLogger.verification(`On Submit , the New Post should get successfully posted to the other
            Community selected from Community drop down in the "Post a Question" page`);
            await CommunitiesPageHelper.verifyPostLinkFromBrowsePage(subject);
        });
});
