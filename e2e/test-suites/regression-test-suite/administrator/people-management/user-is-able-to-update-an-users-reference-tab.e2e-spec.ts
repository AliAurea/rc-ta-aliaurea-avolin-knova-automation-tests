import { StepLogger } from '../../../../../core/logger/step-logger';
import { PageHelper } from '../../../../components/html/page-helper';
import { AdminHomePageHelper } from '../../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminLoginPageHelper } from '../../../../page-objects/pages/admin-login-page/admin-login.helper';
import { UserAndGroupFinderHelper } from '../../../../page-objects/pages/manage-people/user-and-group-finder/user-and-group-finder.helper';
import { UserCreatorConstant } from '../../../../page-objects/pages/manage-people/user-creator/user-creator.constant';
import { UserCreatorHelper } from '../../../../page-objects/pages/manage-people/user-creator/user-creator.helper';
import { ProfileEditorHelper } from '../../../../page-objects/pages/profile-editor/profile-editor.helper';
import { SuiteNames } from '../../../helpers/suite-names';

describe(SuiteNames.regressionSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await AdminLoginPageHelper.logout(true);
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1995
    it('Verify Open Profile Editor Screen using User Creator menu option - [22378070]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:38 GMT

        StepLogger.caseId = 22378070;
        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The menu list should be opened.');
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Manage People.');
        await AdminHomePageHelper.clickOnManagePeopleButton();
        StepLogger.verification('The sub menu list should be opened.');
        await AdminHomePageHelper.verifyManagePeopleSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Verify that the option User Creator should be available.');
        StepLogger.verification('The option User Creator should be available.');
        await AdminHomePageHelper.verifyUserCreatorDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click on User Creator.');
        await AdminHomePageHelper.clickOnUserCreatorOption();
        StepLogger.verification('Profile Editor page should be displayed.');
        await ProfileEditorHelper.verifyProfileEditorPageDisplayed();
    });

    // Jira References - KNOV-1996
    it('Verify User & Group Finder  menu option - [22378093]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:37 GMT

        StepLogger.caseId = 22378093;
        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The menu list should be opened.');
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Manage People.');
        await AdminHomePageHelper.clickOnManagePeopleButton();
        StepLogger.verification('The sub menu list should be opened.');
        await AdminHomePageHelper.verifyManagePeopleSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Verify that the option User & Group Finder should be available.');
        StepLogger.verification('The option User & Group Finder should be available.');
        await AdminHomePageHelper.verifyUserAndGroupFinderOptionIsAvailable();

        StepLogger.stepId(4);
        StepLogger.step('Click on User & Group Finder.');
        await AdminHomePageHelper.clickOnUserGroupFinderOption();
        StepLogger.verification('User & Group Finder page should be displayed.');
        await UserAndGroupFinderHelper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-1998
    it('Verify Preferences tab is enabled when user is saved. - [22383822]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:38 GMT

        StepLogger.caseId = 22383822;
        StepLogger.preCondition('Navigate to Profile Editor page');
        await AdminHomePageHelper.navigateToEditProfilePage();

        StepLogger.stepId(1);
        StepLogger.step('Enter Mandatory info like Username, Password, FirstName, LastName, Bio Information and Roles.');
        StepLogger.verification('User should be able to set the mandatory fields.');
        await UserCreatorHelper.typeAndVerifyMandatoryFields();

        StepLogger.stepId(2);
        StepLogger.step('Click Save.');
        await UserCreatorHelper.clickOnSaveButton();
        StepLogger.verification('User Saved Successfully message should be displayed.');
        await UserCreatorHelper.verifyUserCreatedMessage();

        StepLogger.stepId(3);
        StepLogger.step('Verify that the Preferences is enabled.');
        StepLogger.verification('Preferences tab should be enabled.');
        await UserCreatorHelper.verifyPreferencesTabDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click on Preferences Tab.');
        await UserCreatorHelper.clickOnPreferencesTab();
        StepLogger.verification('The fields of Preferences tab should be displayed.');
        await UserCreatorHelper.verifyPreferencesTabFields();
    });

    // Jira References - KNOV-2001
    it('Verify Set Search Preferences for a user - [22385072]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:38 GMT

        StepLogger.caseId = 22385072;
        StepLogger.preCondition('Create a user and open References tab');
        await UserCreatorHelper.createUserAndOpenReferencesTab();

        StepLogger.stepId(1);
        StepLogger.step('Select value from Results per page drop down.');
        await UserCreatorHelper.selectResultsPerPage(UserCreatorConstant.testData.resultsPerPage);
        StepLogger.verification('User should be able to select Results Per Page.');
        await UserCreatorHelper.verifyResultsPerPageValue(UserCreatorConstant.testData.resultsPerPage);

        StepLogger.stepId(2);
        StepLogger.step('Select value for Whats new from the drop down.');
        await UserCreatorHelper.selectWhatsNewOption(UserCreatorConstant.testData.whatsNew);
        StepLogger.verification('User should be able to select value for What"s new.');
        await UserCreatorHelper.verifyWhatsNewValue(UserCreatorConstant.testData.whatsNew);

        StepLogger.stepId(3);
        StepLogger.step('Select value for Show Threads in Results.');
        await UserCreatorHelper.selectShowThreadsInResult(UserCreatorConstant.testData.showThreadsInResults);
        StepLogger.verification('User should be able to select value for Show Threads in Results.');
        await UserCreatorHelper.verifyShowThreadsIResultValue(UserCreatorConstant.testData.showThreadsInResults);

        StepLogger.stepId(4);
        StepLogger.step('Click Save.');
        await UserCreatorHelper.clickOnSaveButton();
        StepLogger.verification('The values for the Search Preferences should be saved.');
        // This action is not verifiable because it does not produce changes in the screen
    });

    // Jira References - KNOV-1997
    it('Verify Open Profile Editor - Preferences tab for an existing user - [22378107]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:37 GMT

        StepLogger.caseId = 22378107;
        StepLogger.preCondition('Navigate to User and Group Finder page');
        await AdminHomePageHelper.navigateToUserGroupFinder(false);

        StepLogger.stepId(1);
        StepLogger.step(`Enter Search Criteria.
        e.g First Name.`);
        const criteria = UserCreatorConstant.testData.criteria;
        await UserAndGroupFinderHelper.typeFirstName(criteria);
        StepLogger.verification('User should be to enter the search criteria.');
        await UserAndGroupFinderHelper.verifyFirstNameValue(criteria);

        StepLogger.stepId(2);
        StepLogger.step('Click Search.');
        await UserAndGroupFinderHelper.clickOnSearchIcon();
        StepLogger.verification('All Users matching the search criteria should be displayed.');
        await UserAndGroupFinderHelper.verifyUserDisplayedInSearchList(criteria);

        StepLogger.stepId(3);
        StepLogger.step('Click on the user name.');
        await UserAndGroupFinderHelper.ClickOnAUserDisplayedInSearchList(criteria);
        StepLogger.verification('Profile Editor page for that user should be displayed.');
        await UserCreatorHelper.verifyProfileEditorPageDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Click Preferences tab.');
        await UserCreatorHelper.clickOnPreferencesTab();
        StepLogger.verification('The fields of Preferences tab should be displayed.');
        await UserCreatorHelper.verifyPreferencesTabFields();
    });

    // Jira References - KNOV-1999
    it('Verify Set General Preferences for a user - [22385044]', async () => {
        // Auto generated by aurea-automation - util on Sat, 06 Apr 2019 02:19:37 GMT

        StepLogger.caseId = 22385044;
        StepLogger.preCondition('Create a user and open References tab');
        await UserCreatorHelper.createUserAndOpenReferencesTab();

        StepLogger.stepId(1);
        StepLogger.step('Select Language from the Email Language drop down.');
        const language = UserCreatorConstant.testData.language;
        await UserCreatorHelper.selectEmailLanguage(language);
        StepLogger.verification('User should be able to select Email Language.');
        await UserCreatorHelper.verifyEmailLanguageValue(language);

        StepLogger.stepId(2);
        StepLogger.step('Select format from Full Name format drop down.');
        await UserCreatorHelper.selectFullNameFormat(UserCreatorConstant.testData.fullNameFormat);
        StepLogger.verification('User should be able to select Full Name format.');
        await UserCreatorHelper.verifyFullNameFormatValue(UserCreatorConstant.testData.fullNameFormat);

        StepLogger.stepId(3);
        StepLogger.step('Select Date format from Date Format Drop down');
        await UserCreatorHelper.selectDateFormat(UserCreatorConstant.testData.dateFormat);
        StepLogger.verification('User should be able to select Date format.');
        await UserCreatorHelper.verifyDateFormatValue(UserCreatorConstant.testData.dateFormat);

        StepLogger.stepId(4);
        StepLogger.step('Select Time format from the Time Format drop down.');
        await UserCreatorHelper.selectTimeFormat(UserCreatorConstant.testData.timeFormat);
        StepLogger.verification('User should be able to select Time format from the drop down.');
        await UserCreatorHelper.verifyTimeFormatValue(UserCreatorConstant.testData.timeFormat);

        StepLogger.stepId(5);
        StepLogger.step('Set Content Manager Items per page.');
        await UserCreatorHelper.typeItemsPerPage(UserCreatorConstant.testData.itemsPerPage);
        StepLogger.verification('User should be able to set Content Manager Items per page.');
        await UserCreatorHelper.verifyItemsPerPageValue(UserCreatorConstant.testData.itemsPerPage);

        StepLogger.stepId(6);
        StepLogger.step('Click Save.');
        await UserCreatorHelper.clickOnSaveButton();
        StepLogger.verification('The values for the General Preferences should be saved.');
        // This action is not verifiable because it does not produce changes in the screen
    });
});
