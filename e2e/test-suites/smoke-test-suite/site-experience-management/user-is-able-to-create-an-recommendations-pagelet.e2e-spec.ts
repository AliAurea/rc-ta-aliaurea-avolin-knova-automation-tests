import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { Constants } from '../../../components/misc-utils/constants';
import { RandomHelper } from '../../../components/misc-utils/random-helper';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { CommonPageHelper } from '../../../page-objects/pages/common/common-page.helper';
import { AgentMicrositeHelper } from '../../../page-objects/pages/manage-site-experience/agent-microsite/agent-microsite.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await AdminLoginPageHelper.logout(true);
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1532
    it(`Validation of the admin user accessing the "Pagelets" tab of "Recommendation Manager
        for <microsite>" page in Knova Administrator application - [22429621]`, async () => {
            // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:02 GMT

            StepLogger.caseId = 22429621;
            StepLogger.stepId(1);
            StepLogger.step('Click the burger icon from the top left corner of the page.');
            await AdminHomePageHelper.clickOnBurgerIcon();
            StepLogger.verification(`The vertical menu bar with the available modules and options should
        be displayed on the left end of the page.`);
            await AdminHomePageHelper.verifySideMenuDisplayed();

            StepLogger.stepId(2);
            StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
            await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
            StepLogger.verification(`The list of options available options in the "Manage Site Experience"
        should be displayed on the right side of the menu bar.`);
            await AdminHomePageHelper.verifyManageSiteExpSubMenu();

            StepLogger.stepId(3);
            StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
            await AdminHomePageHelper.clickOnAgentMicrositeOption();
            StepLogger.verification(`The list of options available for the selected microsite name should be
        displayed just under the selected microsite.`);
            await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

            StepLogger.stepId(4);
            StepLogger.step('Click the "Recommendation Manager" option from the list displayed.');
            await AdminHomePageHelper.clickOnRecomendationManagerOption();
            StepLogger.verification(`User should be navigated to the "Recommendation Manager for <microsite>"
        page with the list of available pagelets for the selected microsite displayed in "Pagelets" tab.`);
            await AgentMicrositeHelper.verifyRecomendationManagerPageDisplayed();

            StepLogger.stepId(5);
            StepLogger.step(`Verify that the below fields and buttons are available in the "Pagelets" tab of
        "Recommendation Manager for <microsite>" page.
        - Add Pagelet
        - Name (field in tabular structure)
        - ID (field in tabular structure)
        - Location (field in tabular structure)
        - Delete (field in tabular structure)`);
            StepLogger.verification(`The below fields and buttons should be available in the "Pagelets"
        tab of "Recommendation Manager for <microsite>" page.
        - Add Pagelet
        - Name (field in tabular structure)
        - ID (field in tabular structure)
        - Location (field in tabular structure)
        - Delete (field in tabular structure)`);
            await AgentMicrositeHelper.verifyRecommendationManagerPageFields();

            StepLogger.stepId(6);
            StepLogger.step(`Click the burger icon from the top left corner of the page and select the
        "Logout" option.`);
            await AdminLoginPageHelper.logout(true);
            StepLogger.verification(`user should be logged out and the Knova Administrator application
        login page should be displayed.`);
            await AdminLoginPageHelper.verifyUserNotLogged();
        });

    // Jira References - KNOV-1464
    it('Validation of the admin user adding a new pagelet in the "Homepage" without adding a new link - [22429637]', async () => {
        // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:04 GMT

        StepLogger.caseId = 22429637;
        StepLogger.stepId(1);
        StepLogger.step('Click the burger icon from the top left corner of the page.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification(`The vertical menu bar with the available modules and options should
        be displayed on the left end of the page.`);
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification(`The list of options available options in the "Manage Site Experience"
        should be displayed on the right side of the menu bar.`);
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification(`The list of options available for the selected microsite name should be
        displayed just under the selected microsite.`);
        await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Recommendation Manager" option from the list displayed.');
        await AdminHomePageHelper.clickOnRecomendationManagerOption();
        StepLogger.verification(`User should be navigated to the "Recommendation Manager for <microsite>"
        page with the list of available pagelets for the selected microsite displayed in "Pagelets" tab.`);
        await AgentMicrositeHelper.verifyRecomendationManagerPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click the "Add Pagelet" button.');
        await AgentMicrositeHelper.clickOnAddPageletButton();
        StepLogger.verification(`The "new Pagelet" tab should be opened for the user and the user should
        be navigated to that tab with the options to add new pagelet displayed.`);
        await AgentMicrositeHelper.verifyNewPageletTabDisplayed();

        StepLogger.stepId(6);
        StepLogger.step('Verify if the "Homepage" option is selected as default in the "Show On:" field.');
        StepLogger.verification('The "Homepage" option should be selected as default in the "Show On:" field.');
        await AgentMicrositeHelper.verifyHomePageIsSelectedinShowOn();

        StepLogger.stepId(7);
        StepLogger.step('Enter a unique pagelet name in the "Name:" field and click the "Save" button.');
        const name = RandomHelper.getRandomString();
        await AgentMicrositeHelper.typePageletNameAndClickSave(name);
        StepLogger.verification(`A success message as "Pagelet has been succesfully saved."
        should be displayed on the top of the page and an ID should be auto set for the pagelet in
        the "ID:" field along with the tab name changed to the name provided for the pagelet.`);
        await AgentMicrositeHelper.verifyPageletSavedMessageDisplayed();

        StepLogger.stepId(8);
        StepLogger.step(`To verify, click on the "Pagelets" tab and verify if the newly added pagelet is
        displayed in the list of available pagelets.`);
        StepLogger.verification(`The <pagelet name>" tab should be closed then in the "Pagelets"
        tab the newly added pagelet should be displayed among the list of available pagelets with the
        "Name" and "Location" (home symbol) as provided in the previous steps.`);
        await AgentMicrositeHelper.verifyCreatedPageletDisplayed(name);

        StepLogger.stepId(9);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification(`user should be logged out and the Knova Administrator application login
        page should be displayed.`);
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1531
    it(`Validation of the admin user adding a new pagelet by linking to "Document" with default options
            selected in the "Display", "Text" and "Synopsis" fields - [22429659]`, async () => {
            // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:02 GMT

            StepLogger.caseId = 22429659;
            StepLogger.preCondition('Navigate to Pagelete page');
            await AgentMicrositeHelper.navigateToNewPageletPage();

            StepLogger.stepId(1);
            StepLogger.step(`Enter a unique pagelet name in the "Name:" field and click the "Add New Link"
            button.`);
            const name = RandomHelper.getRandomString();
            await AgentMicrositeHelper.typePageletNameAndClickAddNewLink(name);
            StepLogger.verification(`A new recommendation should be added in the text area below the "name"
            field and a new section should be displayed with the "Display What" tab selected as default.`);
            await AgentMicrositeHelper.verifyRecommendationLinkDisplayed();

            StepLogger.stepId(2);
            StepLogger.step(`In the "Display What" tab Verify if the below options are selected as default.
            - "Document" option in the "Link To:" field
            - "Text" option in the "Display:" field
            - "Always Use Document Title" option in the "Text:" field
            - "Always Use Document Synopsis" option in the "Synopsis:" field`);
            StepLogger.verification(`The below options should be selected as default in the "Display What" tab
            - "Document" option in the "Link To:" field
            - "Text" option in the "Display:" field
            - "Always Use Document Title" option in the "Text:" field
            - "Always Use Document Synopsis" option in the "Synopsis:" field`);
            await AgentMicrositeHelper.verifyPageleLinkSelectedOptions();

            StepLogger.stepId(3);
            StepLogger.step(`Enter a valid document name in the "Find Document:" field (e.g, test) and click
            the magnifier symbol.`);
            const textToSearch = RandomHelper.getRandomString(Constants.number.one);
            await AgentMicrositeHelper.typeTextToSeachAndClickSearchIcon(textToSearch);
            StepLogger.verification(`The list of available documents matching the document name entered
            should be displayed in the text area just below the "Fine Document" field.`);
            await AgentMicrositeHelper.verifySearchResultsDisplayed();

            StepLogger.stepId(4);
            StepLogger.step('For a search result, click the " + " available on the left end of the document.');
            await AgentMicrositeHelper.clickOnThePlusIconInTheDisplayedResult();
            StepLogger.verification(`A message as "Document has been added succesfully." should be displayed
            on top of the page and the selected document should be added with its title displayed in the
            "Currently Linked:" field with the text are below the "Find Document:" field as blank.`);
            await AgentMicrositeHelper.verifyDocumentAddedMessageDisplayed();

            StepLogger.stepId(5);
            StepLogger.step('Scroll down the page and click the "Save" button.');
            await AgentMicrositeHelper.clickOnSaveButtonFromRecommendationPage();
            StepLogger.verification(`The added document name with detail should be added to the text area
            below the "name:" field with a  success message as "Pagelet has been succesfully saved." should be
            displayed on the top of the page and an ID should be auto set for the pagelet in the "ID:" field along
            with the tab name changed to the name provided for the pagelet.`);
            await AgentMicrositeHelper.verifyPageletSavedMessageDisplayed();

            StepLogger.stepId(6);
            StepLogger.step(`To verify, click on the "Pagelets" tab and verify if the newly added
            pagelet is displayed in the list of available pagelets.`);
            await AgentMicrositeHelper.clickOnPagelestTab();
            StepLogger.verification(`The <pagelet name>" tab should be closed then in the "Pagelets" tab
            the newly added pagelet should be displayed among the list of available pagelets with the "Name",
            "Location" as provided in the previous steps and the "ID" as generated in step 5.`);
            await AgentMicrositeHelper.verifyCreatedPageletDisplayed(name);

            StepLogger.stepId(7);
            StepLogger.step(`Click the burger icon from the top left corner of the page and select the "Logout"
            option.`);
            await AdminLoginPageHelper.logout(true);
            StepLogger.verification(`user should be logged out and the Knova Administrator application
            login page should be displayed.`);
            await AdminLoginPageHelper.verifyUserNotLogged();
        });

    // Jira References - KNOV-1467
    it('Validation of the admin user adding a new pagelet by linking to "Community" with "Text" display - [22431218]', async () => {
        // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:02 GMT

        StepLogger.caseId = 22431218;
        StepLogger.preCondition('Navigate to Pagelete page');
        await AgentMicrositeHelper.navigateToNewPageletPage();

        StepLogger.stepId(1);
        StepLogger.step('Enter a unique pagelet name in the "Name:" field and click the "Add New Link" button.');
        const name = RandomHelper.getRandomString();
        await AgentMicrositeHelper.typePageletNameAndClickAddNewLink(name);
        StepLogger.verification(`A new recommendation should be added in the text area below the
        "Name" field and a new section should be displayed with the "Display What" tab selected as default.`);
        await AgentMicrositeHelper.verifyRecommendationLinkDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('In the "Link To:" field click the radio button of "Community" option.');
        await AgentMicrositeHelper.clickOnComunityRadioButton();
        StepLogger.verification(`User should be able to select the "Community" option in the "Link To:"
        field and the below fields should be displayed in the "Display What" tab.
        - Link To
        - Document (radio button)
        - Community (radio button - selected)
        - Resolution Flow (radio button)
        - URL (radio button)
        - Nothing (radio button)
        - Currently Linked:
        - Community: (drop down option)
        - Display
        - Text (radio button)
        - Graphic (radio button)
        - Text:
        - Synopsis:`);
        await AgentMicrositeHelper.verifyLinkComunityFields();

        StepLogger.stepId(3);
        StepLogger.step(`Click the drop down list option in the "Community:" field and select an option
        from the list displayed. (e.g, qa_addUser)`);
        const comunityValue = await AgentMicrositeHelper.selectAComunityDropdownRandomOption();
        StepLogger.verification(`The selected option should be displayed in the "Community" field
        and the same value should be displayed in the "Currently Linked:" and "Text:" fields.`);
        await AgentMicrositeHelper.verifyCurrentlyLinkedAndTextFieldsValue(comunityValue);

        StepLogger.stepId(4);
        StepLogger.step('Verify if the "Text" option is selected as default in the "Display:" field.');
        StepLogger.verification('The "Text" option should be selected as default in the "Display:" field.');
        await AgentMicrositeHelper.verifyTextRadioButtonChecked();

        StepLogger.stepId(5);
        StepLogger.step('Scroll down the page and click the "Save" button.');
        await AgentMicrositeHelper.clickOnSaveButtonFromRecommendationPage();
        StepLogger.verification(`The added community name should be displayed in the text
        area below the "Name:" field with a  success message as "Pagelet has been succesfully saved."
        should be displayed on the top of the page and an ID should be auto set for the pagelet in the "ID:"
        field along with the tab name changed to the name provided for the pagelet.`);
        await AgentMicrositeHelper.verifySavedPageletMessagePageletNameAtTheTopAndTextFieldValue(name, comunityValue);

        StepLogger.stepId(6);
        StepLogger.step(`To verify, click on the "Pagelets" tab and verify if the newly added
        pagelet is displayed in the list of available pagelets.`);
        await AgentMicrositeHelper.clickOnPagelestTab();
        StepLogger.verification(`The <pagelet name>" tab should be closed then in the "Pagelets" tab
        the newly added pagelet should be displayed among the list of available pagelets with the "Name",
        "Location" as provided in the previous steps and the "ID" as generated in step 5.`);
        await AgentMicrositeHelper.verifyCreatedPageletDisplayed(name);

        StepLogger.stepId(7);
        StepLogger.step(`Click the burger icon from the top left corner of the page and select the
        "Logout" option.`);
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification(`user should be logged out and the Knova Administrator application
        login page should be displayed.`);
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1528
    it(`Validation of the admin user adding a new pagelet by linking to "Resolution
        Flow" for "Text" Display and selecting non-default options in the "Text" and
        "Synopsis" fields - [22435077]`, async () => {
            // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:04 GMT

            StepLogger.caseId = 22435077;
            StepLogger.preCondition('Navigate to Pagelete page');
            await AgentMicrositeHelper.navigateToNewPageletPage();

            StepLogger.stepId(1);
            StepLogger.step('Enter a unique pagelet name in the "Name:" field and click the "Add New Link"button.');
            const name = RandomHelper.getRandomString();
            await AgentMicrositeHelper.typePageletNameAndClickAddNewLink(name);
            StepLogger.verification(`A new recommendation should be added in the text area below the "name"
        field and a new section should be displayed with the "Display What" tab selected as default.`);
            await AgentMicrositeHelper.verifyRecommendationLinkDisplayed();

            StepLogger.stepId(2);
            StepLogger.step(`In the "Display What" tab select the radio button of the "Resolution Flow"
        option in the "Link To:" field.`);
            await AgentMicrositeHelper.clickOnResolutionFlowRadioButton();
            StepLogger.verification(`User should be able to select the "Resolution Flow" option in the
        "Link To:" field.`);
            await AgentMicrositeHelper.verifyResolutionFlowRadioButtonChecked();

            StepLogger.stepId(3);
            StepLogger.step(`Click the drop down list of "Resolution Flow:" field and select an option from
        the list displayed. (e.g, TD_Community248608)`);
            const resolution = await AgentMicrositeHelper.selectAResolutionFlowDropdownRandomOption();
            StepLogger.verification('The selected option should be displayed in the "Resolution Flow:" field.');
            await AgentMicrositeHelper.verifySelectedResolutionFlowOption(resolution);

            StepLogger.stepId(4);
            StepLogger.step('Verify if the "Text" option is selected as default in the "Display:" field.');
            StepLogger.verification('The "Text" option should be selected as default in the "Display:" field.');
            await AgentMicrositeHelper.verifyTextRadioButtonChecked();

            StepLogger.stepId(5);
            StepLogger.step('In the "Text:" field select the radio button of "Specify Link Text" option.');
            await AgentMicrositeHelper.clickOnSpecifyLinkTextRadioButton();
            StepLogger.verification(`The text area below the "Specify Link Text" option should be enabled
        and the selected resolution flow name should be displayed.`);
            await AgentMicrositeHelper.verifyTextFieldValue(resolution);

            StepLogger.stepId(6);
            StepLogger.step(`Remove the text displayed in the text area below the "Specify Link Text" option
        and enter a value.`);
            const text = await RandomHelper.getRandomString();
            await AgentMicrositeHelper.verifyTextFieldEnabledAndTypeValue(text);
            StepLogger.verification(`User should be able to enter value in the text area below the "Specify
        Link Text" option.`);
            await AgentMicrositeHelper.verifyTextFieldValue(text);

            StepLogger.stepId(7);
            StepLogger.step('In the "Synopsis:" field select the radio button of "Specify Synopsis" option.');
            await AgentMicrositeHelper.clickOnSpecifySynopsisRadioButton();
            StepLogger.verification('The text area below the "Specify Synopsis" option should be enabled.');
            await AgentMicrositeHelper.verifySynopsisTextboxIsEnabled();

            StepLogger.stepId(8);
            StepLogger.step('Enter value in the text area below the "Specify Synopsis" option.');
            const synpsis = RandomHelper.getRandomString();
            await AgentMicrositeHelper.typeValueInSysnopsisTextbox(synpsis);
            StepLogger.verification('User should be able to enter value in the text area below the "Specify Synopsis" option.');
            await AgentMicrositeHelper.verifyValueInSysnopsisTextbox(synpsis);

            StepLogger.stepId(9);
            StepLogger.step('Click the "Save" button.');
            await AgentMicrositeHelper.clickOnSaveButtonFromRecommendationPage();
            StepLogger.verification(`The entered value in the "Text:" field along with the specified synopsis should be added to
        the text area below the "Name:"
        field with a  success message as "Pagelet has been succesfully saved." should be displayed on the top
        of the page and an ID should be auto set for the pagelet in the "ID:" field along with the tab name
        changed to the name provided for the pagelet.`);
            await AgentMicrositeHelper.verifySavedPageletMessagePageletNameAtTheTopAndTextFieldValue(name, text);

            StepLogger.stepId(10);
            StepLogger.step(`To verify, click on the "Pagelets" tab and verify if the newly added pagelet is displayed in the list of
        available pagelets.`);
            await AgentMicrositeHelper.clickOnPagelestTab();
            StepLogger.verification(`The <pagelet name>" tab should be closed then in the "Pagelets"
        tab the newly added pagelet should be displayed among the list of available pagelets with the
        "Name", "Location" as provided in the previous steps and the "ID" as generated in step 9.`);
            await AgentMicrositeHelper.verifyCreatedPageletDisplayed(name);

            StepLogger.stepId(11);
            StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
            await AdminLoginPageHelper.logout(true);
            StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
            await AdminLoginPageHelper.verifyUserNotLogged();
        });

    // Jira References - KNOV-1530
    it(`Validation of the error message when admin user attempt to add a new pagelet without adding text when
    linking to "Community" with "Text" display - [22431268]`, async () => {
            // Auto generated by aurea-automation - util on Tue, 05 Mar 2019 14:28:04 GMT

            StepLogger.caseId = 22431268;
            StepLogger.preCondition('Navigate to Pagelete page');
            await AgentMicrositeHelper.navigateToNewPageletPage();

            StepLogger.stepId(1);
            StepLogger.step('Enter a unique pagelet name in the "Name:" field and click the "Add New Link" button.');
            const name = RandomHelper.getRandomString();
            await AgentMicrositeHelper.typePageletNameAndClickAddNewLink(name);
            StepLogger.verification(`A new recommendation should be added in the text area below the "Name" field
            and a new section should be displayed with the "Display What" tab selected as default.`);
            await AgentMicrositeHelper.verifyRecommendationLinkDisplayed();

            StepLogger.stepId(2);
            StepLogger.step('In the "Link To:" field click the radio button of "Community" option.');
            await AgentMicrositeHelper.clickOnComunityRadioButton();
            StepLogger.verification(`User should be able to select the "Community" option in the "Link To:"
            field and the below fields should be displayed in the "Display What" tab.
            - Link To
            - Document (radio button)
            - Community (radio button - selected)
            - Resolution Flow (radio button)
            - URL (radio button)
            - Nothing (radio button)
            - Currently Linked:
            - Community: (drop down option)
            - Display
            - Text (radio button)
            - Graphic (radio button)
            - Text:
            - Synopsis:`);
            await AgentMicrositeHelper.verifyLinkComunityFields();

            StepLogger.stepId(3);
            StepLogger.step('verify if the "Community:" field hold a default selected value.');
            StepLogger.verification('The "Community:" field should hold the default selected value.');
            await AgentMicrositeHelper.verifyComunityDropdownIsNotEmpty();

            StepLogger.stepId(4);
            StepLogger.step('Verify if the "Text" option is selected as default in the "Display:" field.');
            StepLogger.verification('The "Text" option should be selected as default in the "Display:" field.');
            await AgentMicrositeHelper.verifyTextRadioButtonChecked();

            StepLogger.stepId(5);
            StepLogger.step('Scroll down the page and click the "Save" button.');
            await AgentMicrositeHelper.clickOnSaveButtonFromRecommendationPage();
            StepLogger.verification(`The "--Webpage Dialog" message box with the message as below displayed.
            "The following properties cannot be blank:
            Text"`);
            await AgentMicrositeHelper.verifyLeftBrankPropertyMessageDisplayedAncCloseIt();

            // Step 6 is covered in step 5
            StepLogger.stepId(6);
            StepLogger.step('Click the OK button.');
            StepLogger.verification('The message box should be closed and the user should be navigated to the "New Pagelet" tab.');
            await AgentMicrositeHelper.verifyPoppupIsClosed();

            StepLogger.stepId(7);
            StepLogger.step('Click on the "Pagelets" tab');
            await CommonPageHelper.switchToContentFrame();
            await AgentMicrositeHelper.clickOnPagelestTab();
            StepLogger.verification(`The "New Pagelet" tab should be closed with no new pagelet displayed
            among the list of available pagelets in the "Pagelets" tab.`);
            await AgentMicrositeHelper.verifyPageletNotDisplayed(name);

            StepLogger.stepId(8);
            StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
            await AdminLoginPageHelper.logout(true);
            StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
            await AdminLoginPageHelper.verifyUserNotLogged();
        });
});
