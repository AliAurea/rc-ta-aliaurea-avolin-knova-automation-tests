import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { ResolutionFlowConstant } from '../../../page-objects/pages/manage-site-experience/resolution-flow/resolution-flow.constants';
import { ResolutionFlowHelper } from '../../../page-objects/pages/manage-site-experience/resolution-flow/resolution-flow.helper';
import { ResolutionFlowPage } from '../../../page-objects/pages/manage-site-experience/resolution-flow/resolution-flow.po';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
    });

    beforeEach(async () => {
        await AdminLoginPageHelper.logout(true);
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1765
    it('Validation of the admin user accessing the "Resolution Flow Designer" page in Knova Administrator application - [22409447]', async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:34 GMT
        StepLogger.caseId = 22409447;

        StepLogger.stepId(1);
        StepLogger.step('Click the burger icon from the top left corner of the page.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The vertical menu bar with the available modules and options should be displayed on the left end of the page.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification('The list of options available options in the "Manage Site Experience" should be displayed on the right side of the menu bar.');
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification('The list of options available for the selected microsite name should be displayed just under the selected microsite.');
        await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Resolution Flow Designer" option from the list displayed.');
        await AdminHomePageHelper.clickOnResolutionFlowDesignerOption();
        StepLogger.verification(`User should be navigated to the "Resolution Flow Designer" page with the list of available resolution flows
            for the selected microsite displayed in "Inbox" tab.`);
        await ResolutionFlowHelper.verifyResolutionFlowDesignerPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1766
    it('Validating the field and buttons available in the "Resolution Flow Designer" page in Knova Administrator application - [22409450]', async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:34 GMT
        StepLogger.caseId = 22409450;

        StepLogger.stepId(1);
        StepLogger.step('Click the burger icon from the top left corner of the page.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The vertical menu bar with the available modules and options should be displayed on the left end of the page.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification('The list of options available options in the "Manage Site Experience" should be displayed on the right side of the menu bar.');
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification('The list of options available for the selected microsite name should be displayed just under the selected microsite.');
        await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Resolution Flow Designer" option from the list displayed.');
        await AdminHomePageHelper.clickOnResolutionFlowDesignerOption();
        StepLogger.verification(`User should be navigated to the "Resolution Flow Designer" page with the list of available resolution flows for
            the selected microsite displayed in "Inbox" tab.`);
        await ResolutionFlowHelper.verifyResolutionFlowDesignerPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step(`Verify if the below fields and buttons are displayed in the "Inbox" tab of "Resolution Flow Designer" page.
            - Show Active (drop down)
            - Name (Field in tabular structure)
            - Description (Field in tabular structure)
            - Visible (Field in tabular structure)
            - Community Used (Field in tabular structure)
            - Moderator (Field in tabular structure)
            - Delete (Field in tabular structure)
            - Copy (Field in tabular structure)
            - New Resolution Flow (button)
            - Reorder (button)
            - Validate (button)`);
        StepLogger.verification(`The below fields and buttons should be displayed in the "Inbox" tab of "Resolution Flow Designer" page.
            - Show Active (drop down)
            - Name (Field in tabular structure)
            - Description (Field in tabular structure)
            - Visible (Field in tabular structure)
            - Community Used (Field in tabular structure)
            - Moderator (Field in tabular structure)
            - Delete (Field in tabular structure)
            - Copy (Field in tabular structure)
            - New Resolution Flow (button)
            - Reorder (button)
            - Validate (button)`);
        await ResolutionFlowHelper.verifyPageContent();

        StepLogger.stepId(6);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1767
    it(`Validation of the admin user accessing the "Builder" tab of "Resolution Flow Designer" page in
        Knova Administrator application - [22409455]`, async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:35 GMT
        StepLogger.caseId = 22409455;

        StepLogger.stepId(1);
        StepLogger.step('Click the burger icon from the top left corner of the page.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The vertical menu bar with the available modules and options should be displayed on the left end of the page.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification('The list of options available options in the "Manage Site Experience" should be displayed on the right side of the menu bar.');
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification('The list of options available for the selected microsite name should be displayed just under the selected microsite.');
        await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Resolution Flow Designer" option from the list displayed.');
        await AdminHomePageHelper.clickOnResolutionFlowDesignerOption();
        StepLogger.verification(`User should be navigated to the "Resolution Flow Designer" page with the list of available resolution flows
            for the selected microsite displayed in "Inbox" tab.`);
        await ResolutionFlowHelper.verifyResolutionFlowDesignerPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click the "New Resolution Flow" button available at the bottom left of the page.');
        await ResolutionFlowPage.buttons.newResolutionFlow.clickButton();
        StepLogger.verification(`The "Builder" tab should be added for the user in the "Resolution Flow Designer" page and
            the user should be navigated to the "Builder" tab.`);
        await ResolutionFlowHelper.verifyBuilderTab();

        StepLogger.stepId(6);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1768
    it(`Validating the fields and buttons available in the "Builder" tab of "Resolution Flow Designer" page
        in Knova Administrator application - [22409458]`, async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:35 GMT
        StepLogger.caseId = 22409458;

        StepLogger.stepId(1);
        StepLogger.step('Click the burger icon from the top left corner of the page.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The vertical menu bar with the available modules and options should be displayed on the left end of the page.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Scroll down the menu bar and click the "Manage Site Experience" module.');
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification('The list of options available options in the "Manage Site Experience" should be displayed on the right side of the menu bar.');
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on any of the microsite name displayed. (e.g, Customer Microsite)');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification('The list of options available for the selected microsite name should be displayed just under the selected microsite.');
        await AdminHomePageHelper.verifyAgentMicrositeMenuOptions();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Resolution Flow Designer" option from the list displayed.');
        await AdminHomePageHelper.clickOnResolutionFlowDesignerOption();
        StepLogger.verification(`User should be navigated to the "Resolution Flow Designer" page with the list of available resolution flows
            for the selected microsite displayed in "Inbox" tab.`);
        await ResolutionFlowHelper.verifyResolutionFlowDesignerPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Click the "New Resolution Flow" button available at the bottom left of the page.');
        await ResolutionFlowPage.buttons.newResolutionFlow.clickButton();
        StepLogger.verification(`The "Builder" tab should be added for the user in the "Resolution Flow Designer" page and
            the user should be navigated to the "Builder" tab.`);
        await ResolutionFlowHelper.verifyBuilderTab();

        StepLogger.stepId(6);
        StepLogger.step(`Verify if the below mentioned fields and buttons are available in the "Builder" tab of the "Resolution Flow Designer" page.
            - Name
            - Moderator
            - Select (button)
            - Make Visible
            - Last Modified
            - Display Description
            - Internal Description
            - Timer
            - Community (drop down)
            - Edit (button)
            - New Rule (button)
            - Save (button)
            - Cancel (button)`);
        StepLogger.verification(`The below mentioned fields and buttons should be available in the "Builder" tab of the "Resolution Flow Designer" page.
            - Name
            - Moderator
            - Select (button)
            - Make Visible
            - Last Modified
            - Display Description
            - Internal Description
            - Timer
            - Community (drop down)
            - Edit (button)
            - New Rule (button)
            - Save (button)
            - Cancel (button)`);
        await ResolutionFlowHelper.verifyBuilderTabContent();

        StepLogger.stepId(7);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1769
    it('Validation of the admin user adding a new resolution flow with just the mandatory fields (Name and Moderator) - [22409471]', async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:34 GMT
        StepLogger.caseId = 22409471;
        const resolutionFlow = `${ResolutionFlowConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Builder tab');
        await ResolutionFlowHelper.navigateToBuilderTab();

        StepLogger.stepId(1);
        StepLogger.step('Enter a valid and unique name in the "Name:" field.');
        await ResolutionFlowHelper.enterResolutionFlowName(resolutionFlow);
        StepLogger.verification('User should be able to add a value in the "Name:" field.');
        await ResolutionFlowHelper.verifyResolutionFlowName(resolutionFlow);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Select" button available in the "Moderator:" field.');
        await ResolutionFlowPage.builderTab.selectModerator.clickButton();
        StepLogger.verification('The "Moderator" popup window should be displayed.');
        await ResolutionFlowHelper.verifyModeratorDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click the radio button of any moderator from the list displayed in the "Moderator" popup window.');
        const moderator = await ResolutionFlowHelper.selectModerator();
        StepLogger.verification('User should be able to select any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.verifyModerator();

        StepLogger.stepId(4);
        StepLogger.step('Click the OK button.');
        await ResolutionFlowHelper.clickOkModeratorDialog();
        StepLogger.verification(`The "Moderator" popup window should be closed and the user should be navigated to the "Builder"
            tab of "Resolution Flow Designer" with the selected moderators displayed next to the "Select" button of the "Moderator:" field.`);
        await ResolutionFlowHelper.verifySelectedModerator(moderator);

        StepLogger.stepId(5);
        StepLogger.step('Click the "Save" button.');
        await ResolutionFlowHelper.clickSaveButton();
        StepLogger.verification(`A message as "Resolution Flow successfully saved (<Date & Time>)" should be displayed
            on the top of the page and the "last Modified:" field should also be updated with the system date and time.`);
        await ResolutionFlowHelper.verifyMessageAndLastModified();

        StepLogger.stepId(6);
        StepLogger.step(`To verify, navigate to the "Inbox" tab and verify if the newly added resolution flow is displayed among the
            list of available resolution flows.`);
        StepLogger.verification(`The "Builder" tab should be closed and the newly added resolution flow should be displayed among the list of available
            resolution flows with the values in the "Name" and "Moderator" fields as entered in the previous steps.`);
        await ResolutionFlowHelper.verifyCreatedResolutionFlow(resolutionFlow, moderator);

        StepLogger.stepId(7);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1777
    it('Validation of the admin user can discard the selected moderator and select a new one when creating a resolution flow - [22409911]', async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:35 GMT
        StepLogger.caseId = 22409911;
        const resolutionFlow = `${ResolutionFlowConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Builder tab');
        await ResolutionFlowHelper.navigateToBuilderTab();

        StepLogger.stepId(1);
        StepLogger.step('Enter a valid and unique name in the "Name:" field.');
        await ResolutionFlowHelper.enterResolutionFlowName(resolutionFlow);
        StepLogger.verification('User should be able to add a value in the "Name:" field.');
        await ResolutionFlowHelper.verifyResolutionFlowName(resolutionFlow);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Select" button available in the "Moderator:" field.');
        await ResolutionFlowPage.builderTab.selectModerator.clickButton();
        StepLogger.verification('The "Moderator" popup window should be displayed.');
        await ResolutionFlowHelper.verifyModeratorDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click the radio button of any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.selectModerator();
        StepLogger.verification('User should be able to select any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.verifyModerator();

        StepLogger.stepId(4);
        StepLogger.step('Click the "Cancel" button.');
        await ResolutionFlowHelper.clickCancelModeratorDialog();
        StepLogger.verification(`The "Moderator" popup window should be closed and no value should be displayed next to
            the "Select" button of the "Moderator:" field.`);
        await ResolutionFlowPage.builderTab.selectedModerator.verifyHiddenStatus();

        StepLogger.stepId(5);
        StepLogger.step('Repeat step 2 and 3.');
        const moderator = await ResolutionFlowHelper.clickSelectAndSelectModerator();
        StepLogger.verification('User should be able to select any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.verifyModerator();

        StepLogger.stepId(6);
        StepLogger.step('Click the OK button.');
        await ResolutionFlowHelper.clickOkModeratorDialog();
        StepLogger.verification(`The "Moderator" popup window should be closed and the user should be navigated to the "Builder" tab of
            "Resolution Flow Designer" with the selected moderators displayed next to the "Select" button of the "Moderator:" field.`);
        await ResolutionFlowHelper.verifySelectedModerator(moderator);

        StepLogger.stepId(7);
        StepLogger.step('Click the "Save" button.');
        await ResolutionFlowHelper.clickSaveButton();
        StepLogger.verification(`A message as "Resolution Flow successfully saved (<Date & Time>)" should be displayed on the top of the page and
            the "last Modified:" field should also be updated with the system date and time.`);
        await ResolutionFlowHelper.verifyMessageAndLastModified();

        StepLogger.stepId(8);
        StepLogger.step(`To verify, navigate to the "Inbox" tab and verify if the newly added resolution flow is displayed among
            the list of available resolution flows.`);
        StepLogger.verification(`The "Builder" tab should be closed and the newly added resolution flow should be displayed among the list of
            available resolution flows with the values in the "Name" and "Moderator" fields as entered in the previous steps.`);
        await ResolutionFlowHelper.verifyCreatedResolutionFlow(resolutionFlow, moderator);

        StepLogger.stepId(9);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1770
    it('Validation of the error message when admin user attempt to add a new resolution flow with duplicate name - [22409840]', async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:34 GMT
        StepLogger.caseId = 22409840;
        const resolutionFlow = `${ResolutionFlowConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Create a Resolution Flow and navigate to Builder tab');
        await ResolutionFlowHelper.createResolutionFlow(resolutionFlow);
        await ResolutionFlowPage.buttons.newResolutionFlow.clickButton();

        StepLogger.stepId(1);
        StepLogger.step('Enter a name that is already available for a resolution flow in the "Name:" field.');
        await ResolutionFlowHelper.enterResolutionFlowName(resolutionFlow);
        StepLogger.verification('User should be able to add a value in the "Name:" field.');
        await ResolutionFlowHelper.verifyResolutionFlowName(resolutionFlow);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Select" button available in the "Moderator:" field.');
        await ResolutionFlowPage.builderTab.selectModerator.clickButton();
        StepLogger.verification('The "Moderator" popup window should be displayed.');
        await ResolutionFlowHelper.verifyModeratorDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click the radio button of any moderator from the list displayed in the "Moderator" popup window.');
        const moderator = await ResolutionFlowHelper.selectModerator();
        StepLogger.verification('User should be able to select any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.verifyModerator();

        StepLogger.stepId(4);
        StepLogger.step('Click the OK button.');
        await ResolutionFlowHelper.clickOkModeratorDialog();
        StepLogger.verification(`The "Moderator" popup window should be closed and the user should be navigated to the "Builder"
            tab of "Resolution Flow Designer" with the selected moderators displayed next to the "Select" button of the "Moderator:" field.`);
        await ResolutionFlowHelper.verifySelectedModerator(moderator);

        StepLogger.stepId(5);
        StepLogger.step('Click the "Save" button.');
        await ResolutionFlowHelper.clickSaveButton();
        StepLogger.verification(`The "--Webpage Dialog" message box with the message as "A Resolution Flow with this name already exists.
            Please enter a different name." should be displayed.`);
        await ResolutionFlowHelper.verifyDuplicateNameWindow();

        StepLogger.stepId(6);
        StepLogger.step('Click the OK button.');
        await ResolutionFlowHelper.clickOkButtonWindow();
        StepLogger.verification(`User should be navigated to the "Builder" tab of the "Resolution Flow Designer" page with
            the values displayed as entered in previous steps.`);
        await ResolutionFlowHelper.verifyBuilderTabWithValues(resolutionFlow, moderator);

        StepLogger.stepId(7);
        StepLogger.step('Click the "Cancel" button.');
        await ResolutionFlowPage.buttons.cancel.clickButton();
        StepLogger.verification(`The "Builder" tab should be closed and the user should be navigated to the "Inbox" tab
            of the "Resolution Flow Designer" page.`);
        await ResolutionFlowHelper.verifyPageContent();

        StepLogger.stepId(8);
        StepLogger.step('Verify if the attempted newly added resolution flow in the previous step is displayed among the list of available resolution flows.');
        StepLogger.verification('The attempted newly added resolution flow should not be displayed among the list of available resolution flows.');
        await ResolutionFlowHelper.verifyNoDuplicates(resolutionFlow);

        StepLogger.stepId(9);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });

    // Jira References - KNOV-1771
    it(`Validation of the admin user adding a new resolution flow by making it visible along with the mandatory fields
        (Name and Moderator) - [22409860]`, async () => {
        // Auto generated by aurea-automation - util on Mon, 11 Mar 2019 08:28:35 GMT
        StepLogger.caseId = 22409860;
        const resolutionFlow = `${ResolutionFlowConstant.labels.test}${PageHelper.getUniqueId()}`;

        StepLogger.preCondition('Navigate to Builder tab');
        await ResolutionFlowHelper.navigateToBuilderTab();

        StepLogger.stepId(1);
        StepLogger.step('Enter a valid and unique name in the "Name:" field.');
        await ResolutionFlowHelper.enterResolutionFlowName(resolutionFlow);
        StepLogger.verification('User should be able to add a value in the "Name:" field.');
        await ResolutionFlowHelper.verifyResolutionFlowName(resolutionFlow);

        StepLogger.stepId(2);
        StepLogger.step('Click the "Select" button available in the "Moderator:" field.');
        await ResolutionFlowPage.builderTab.selectModerator.clickButton();
        StepLogger.verification('The "Moderator" popup window should be displayed.');
        await ResolutionFlowHelper.verifyModeratorDialog();

        StepLogger.stepId(3);
        StepLogger.step('Click the radio button of any moderator from the list displayed in the "Moderator" popup window.');
        const moderator = await ResolutionFlowHelper.selectModerator();
        StepLogger.verification('User should be able to select any moderator from the list displayed in the "Moderator" popup window.');
        await ResolutionFlowHelper.verifyModerator();

        StepLogger.stepId(4);
        StepLogger.step('Click the OK button.');
        await ResolutionFlowHelper.clickOkModeratorDialog();
        StepLogger.verification(`The "Moderator" popup window should be closed and the user should be navigated to the "Builder" tab of
            "Resolution Flow Designer" with the selected moderators displayed next to the "Select" button of the "Moderator:" field.`);
        await ResolutionFlowHelper.verifySelectedModerator(moderator);

        StepLogger.stepId(5);
        StepLogger.step('Check the check box available in the "Make Visible:" field.');
        await ResolutionFlowPage.builderTab.makeVisible.clickButton();
        StepLogger.verification('User should be able to check the check box available in the "Make Visible:" field.');
        await ResolutionFlowHelper.verifyMakeVisibleChecked();

        StepLogger.stepId(6);
        StepLogger.step('Click the "Save" button.');
        await ResolutionFlowHelper.clickSaveButton();
        StepLogger.verification(`A message as "Resolution Flow successfully saved (<Date & Time>)" should be displayed on the top of the page and
            the "last Modified:" field should also be updated with the system date and time.`);
        await ResolutionFlowHelper.verifyMessageAndLastModified();

        StepLogger.stepId(7);
        StepLogger.step(`To verify, navigate to the "Inbox" tab and verify if the newly added resolution flow is displayed among
        the list of available resolution flows.`);
        StepLogger.verification(`The "Builder" tab should be closed and the newly added resolution flow should be displayed among the list of
            available resolution flows with the values in the "Name" , "Visible" (tick mark) and "Moderator" fields as entered in the previous steps.`);
        await ResolutionFlowHelper.verifyCreatedResolutionFlow(resolutionFlow, moderator, true);

        StepLogger.stepId(8);
        StepLogger.step('Click the burger icon from the top left corner of the page and select the "Logout" option.');
        await AdminLoginPageHelper.logout(true);
        StepLogger.verification('user should be logged out and the Knova Administrator application login page should be displayed.');
        await AdminLoginPageHelper.verifyUserNotLogged();
    });
});
