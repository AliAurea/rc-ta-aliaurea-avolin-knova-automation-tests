import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { CredentialsHelper } from '../../../components/misc-utils/credentials-helper';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { AgentMicrositeHelper } from '../../../page-objects/pages/manage-site-experience/agent-microsite/agent-microsite.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await AdminLoginPageHelper.logout(true);
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-711
    it('Verify Resolution Flow Designer screen is displayed. - [22429544]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 16:46:38 GMT

        StepLogger.caseId = 22429544;

        // Step 1 is covered in beforeEach
        StepLogger.stepId(1);
        StepLogger.step('Log in to the application.');
        StepLogger.verification('The user is able to log in to the application.');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click on manage site experience.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        await AdminHomePageHelper.clickOnManageSiteExperienceMenu();
        StepLogger.verification('Microsite names are displayed.');
        await AdminHomePageHelper.verifyManageSiteExpSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Select any microsite name.');
        await AdminHomePageHelper.clickOnAgentMicrositeOption();
        StepLogger.verification('Resolution flow designer is displayed.');
        await AdminHomePageHelper.verifyResolutionFlowDesignerDisplayed();

        StepLogger.stepId(4);
        StepLogger.step('Select Resolution flow designer.');
        await AdminHomePageHelper.clickOnResolutionFlowDesignerOption();
        StepLogger.verification('Resolution Flow Designer page is displayed.');
        await AgentMicrositeHelper.verifyResolutionFlowDesignerPageDisplayed();
    });

    // Jira References - KNOV-712
    it('Verify process designer screen is displayed if step is already present and clicked. - [22429545]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 16:46:38 GMT

        StepLogger.caseId = 22429545;
        StepLogger.preCondition('Navigate to Resolution Flow Designer page');
        await AgentMicrositeHelper.CreateAStepTheresNotAlreadyCreated();

        StepLogger.stepId(1);
        StepLogger.step('Click on the name of the existing resolution flow.');
        await AgentMicrositeHelper.clickOnARandomResolutionName();
        StepLogger.verification('Builder tab is displayed.');
        await AgentMicrositeHelper.verifyBuilderTabDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on the name of the existing step present.');
        await AgentMicrositeHelper.clickOnStepsLink();
        StepLogger.verification('Process designer tab is displayed.');
        await AgentMicrositeHelper.verifyProcessDesignerTabDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Expand the step is already not expanded.');
        StepLogger.verification('It shows the details of the step.');
        await AgentMicrositeHelper.verifyStepIconsAreNotExpanded();
    });

    // Jira References - KNOV-714
    it('Verify that the step is deleted after clicking on "X" sign present with the step. - [22429598]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 16:46:38 GMT

        StepLogger.caseId = 22429598;
        StepLogger.preCondition('Navigate to Resolution Flow Designer page and click open a random resolution name');
        await AgentMicrositeHelper.CreateOneStepInRandomResolutionNameAndOpenStepsPage();
        const previousNumberOfSteps = await AgentMicrositeHelper.getNumberOfSteps();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "X" present with the step.');
        await AgentMicrositeHelper.clickOnTheFirstDeleteIcon();
        StepLogger.verification('A pop up is displayed.');
        await AgentMicrositeHelper.verifyDeleteStepPopupDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Select a radio button.');
        await AgentMicrositeHelper.clickOnDeleteFromFormPageRadionButton();
        StepLogger.verification('The user is able to select the radio button.');
        await AgentMicrositeHelper.verifyDeleteFromFormPageRadionButtonIsSelected();

        StepLogger.stepId(3);
        StepLogger.step('Click on Ok button.');
        await AgentMicrositeHelper.clickOkButtonFromDeleteStepPopup();
        StepLogger.verification('The step is deleted.');
        await AgentMicrositeHelper.verifyStepDeleted(previousNumberOfSteps);
    });
});
