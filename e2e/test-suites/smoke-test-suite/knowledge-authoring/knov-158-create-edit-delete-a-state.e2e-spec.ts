import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { Constants } from '../../../components/misc-utils/constants';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminHomePage } from '../../../page-objects/pages/admin-home-page/admin-home.po';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { WorkflowBuilderHelper } from '../../../page-objects/pages/manage-knowledge/knowledge-authoring/workflow-buider.helper';
import { WorkflowBuilderConstant } from '../../../page-objects/pages/manage-knowledge/knowledge-authoring/workflow-builder.constants';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;
    let stateName = `${WorkflowBuilderConstant.labels.test}${PageHelper.getUniqueId()}`;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
        await AdminLoginPageHelper.loginAsAdmin();
    });

    // Jira References - KNOV-1285
    it('Verify Workflow Builder menu option is available - [22331455]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:50 GMT
        StepLogger.caseId = 22331455;

        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The menu list should be opened.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Manage Knowledge.');
        await AdminHomePageHelper.clickOnManageKnowledgeMenu();
        StepLogger.verification('The sub menu list should be opened.');
        await AdminHomePageHelper.verifyManageKnowledgeSubMenu();

        StepLogger.stepId(3);
        StepLogger.step('Click on Knowledge Authoring.');
        await AdminHomePageHelper.clickOnKnowledgeAuthoring();
        StepLogger.verification('The sub  menu list should be displayed.');
        await AdminHomePageHelper.verifyKnowledgeAuthoringSubmenuOptions();

        // Step 4 has been covered in step 3
        StepLogger.stepId(4);
        StepLogger.step('Verify that the option WorkFlow Builder should be available.');
        StepLogger.verification('The option Workflow Builder should be available.');

        StepLogger.postCondition('Logout');
        await AdminHomePageHelper.clickOnBurgerIcon();
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1286
    it('Verify Open Workflow Builder page - [22331507]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:50 GMT
        StepLogger.caseId = 22331507;

        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon.');
        await AdminHomePageHelper.clickOnBurgerIcon();
        StepLogger.verification('The menu list should be opened.');
        await AdminHomePageHelper.verifySidebarFieldsDisplayed();

        StepLogger.stepId(2);
        StepLogger.step('Click on Manage Knowledge-->Knowledge Authoring.');
        await WorkflowBuilderHelper.goToKnowledgeAuthoring();
        StepLogger.verification('The sub menu list should be displayed.');
        await AdminHomePageHelper.verifyKnowledgeAuthoringSubmenuOptions();

        StepLogger.stepId(3);
        StepLogger.step('Click on Workflow Builder');
        await AdminHomePageHelper.clickSubMenu(AdminHomePage.knowledgeAuthoring.workflowBuilder);
        StepLogger.verification('Authoring Workflow Builder page should be opened.');
        await WorkflowBuilderHelper.verifyPageTitle();

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1287
    it('Verify Click on New State - [22336251]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:50 GMT
        StepLogger.caseId = 22336251;

        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon -->Manage Knowledge-->Knowledge Authoring.');
        await WorkflowBuilderHelper.navigateToKnowledgeAuthoring();
        StepLogger.verification('The sub menu list should be displayed.');
        await AdminHomePageHelper.verifyKnowledgeAuthoringSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Click on Workflow Builder');
        await AdminHomePageHelper.clickSubMenu(AdminHomePage.knowledgeAuthoring.workflowBuilder);
        StepLogger.verification('Authoring Workflow Builder page should be opened.');
        await WorkflowBuilderHelper.verifyPageTitle();

        StepLogger.stepId(3);
        StepLogger.step('Click on New State Button.');
        await WorkflowBuilderHelper.clickNewStateButton();
        StepLogger.verification('Authoring WorkFlow State Window should be displayed.');
        await WorkflowBuilderHelper.verifyWorkflowStateDialog();

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1288
    it('Verify Click on Current State Name - [22336256]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:49 GMT
        StepLogger.caseId = 22336256;

        StepLogger.stepId(1);
        StepLogger.step('Click on the Menu icon -->Manage Knowledge-->Knowledge Authoring.');
        await WorkflowBuilderHelper.navigateToKnowledgeAuthoring();
        StepLogger.verification('The sub menu list should be displayed.');
        await AdminHomePageHelper.verifyKnowledgeAuthoringSubmenuOptions();

        StepLogger.stepId(2);
        StepLogger.step('Click on Workflow Builder');
        await AdminHomePageHelper.clickSubMenu(AdminHomePage.knowledgeAuthoring.workflowBuilder);
        StepLogger.verification('Authoring Workflow Builder page should be opened.');
        await WorkflowBuilderHelper.verifyPageTitle();

        StepLogger.stepId(3);
        StepLogger.step('Click on Workflow state name from the list.');
        await WorkflowBuilderHelper.selectAuthorWorkflowState(true);
        StepLogger.verification('The selected State information should be displayed.');
        await WorkflowBuilderHelper.verifySelectedWorkflowState(WorkflowBuilderConstant.workflowStates.author, true);

        StepLogger.stepId(4);
        StepLogger.step('Click on the State name next to Current state.');
        await WorkflowBuilderHelper.selectSuggestionWorkflowState();
        StepLogger.verification('Authoring Workflow State window displaying information for the Current state should be displayed.');
        await WorkflowBuilderHelper.verifySelectedWorkflowState(WorkflowBuilderConstant.workflowStates.suggestion, true);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1289
    it('Verify a New state can be created - [22336264]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:49 GMT
        StepLogger.caseId = 22336264;

        StepLogger.preCondition('Navigate to Workflow Builder');
        await WorkflowBuilderHelper.navigateToWorkflowBuilder();

        StepLogger.stepId(1);
        StepLogger.step('Click on New State.');
        await WorkflowBuilderHelper.clickNewStateButton();
        StepLogger.verification('Authoring Workflow State window should be opened.');
        await WorkflowBuilderHelper.verifyWorkflowStateDialog();

        StepLogger.stepId(2);
        StepLogger.step('Enter a name for the Workflow state.');
        await WorkflowBuilderHelper.enterStateName(stateName, true);
        StepLogger.verification('The user should be able to set a name for the Workflow State.');
        await WorkflowBuilderHelper.verifyStateName(stateName);

        StepLogger.stepId(3);
        StepLogger.step('Click Select next to Groups & Users who can process items in this state');
        await WorkflowBuilderHelper.clickSelectUsersGroupsButton();
        StepLogger.verification('Select Users/Groups should be displayed.');
        await WorkflowBuilderHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(4);
        StepLogger.step(`click Show All for users/groups.
            Select desired users/groups.`);
        const user = await WorkflowBuilderHelper.selectUsersGroups();
        StepLogger.verification('The selected users/groups should be displayed in the list below.');
        await WorkflowBuilderHelper.verifySelectedUserGroup(user);

        StepLogger.stepId(5);
        StepLogger.step('Click OK');
        await WorkflowBuilderHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The Users /Groups should be set.');
        await WorkflowBuilderHelper.verifyUsersGroupsSelected(user);

        StepLogger.stepId(6);
        StepLogger.step(`Set other desired fields and Click Submit.
            State Triggers Translations.
            Documents can be edited in this state.
            Time Limit
            Goal per Week
            Enter alternative names for the state in those languages. (If configured).`);
        await WorkflowBuilderHelper.setOtherStateOptionsAndSubmit();
        StepLogger.verification('The new State should be created and listed in the Workflow States list.');
        await WorkflowBuilderHelper.verifyCreatedState(stateName);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1292
    it('Verify a state can be edited - [22336333]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:50 GMT
        StepLogger.caseId = 22336333;

        StepLogger.preCondition('Navigate to Workflow Builder');
        await WorkflowBuilderHelper.navigateToWorkflowBuilder();

        StepLogger.stepId(1);
        StepLogger.step('Click on Workflow state name from the list.');
        await WorkflowBuilderHelper.selectWorkflowState(stateName);
        StepLogger.verification('The selected State information should be displayed.');
        await WorkflowBuilderHelper.verifySelectedWorkflowState(stateName);

        StepLogger.stepId(2);
        StepLogger.step('Click on the State name next to Current state.');
        await WorkflowBuilderHelper.clickSelectedState();
        StepLogger.verification('Authoring Workflow State window should be opened.');
        await WorkflowBuilderHelper.verifyWorkflowStateDialog();

        StepLogger.stepId(3);
        StepLogger.step('Set a name for the Workflow state.');
        stateName = `${stateName}${Constants.stringNumber.one}`;
        await WorkflowBuilderHelper.enterStateName(stateName, true);
        StepLogger.verification('The user should be able to set a name for the Workflow State.');
        await WorkflowBuilderHelper.verifyStateName(stateName);

        StepLogger.stepId(4);
        StepLogger.step('Click Select next to Groups & Users who can process items in this state');
        await WorkflowBuilderHelper.clickSelectUsersGroupsButton();
        StepLogger.verification('Select Users/Groups should be displayed.');
        await WorkflowBuilderHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(5);
        StepLogger.step(`click Show All for users/groups.
            Select desired users/groups.`);
        const user = await WorkflowBuilderHelper.selectUsersGroups(false);
        StepLogger.verification('The selected users/groups should be displayed in the list below.');
        await WorkflowBuilderHelper.verifySelectedUserGroup(user);

        StepLogger.stepId(6);
        StepLogger.step('Click OK');
        await WorkflowBuilderHelper.clickOkUsersGroupsButton();
        StepLogger.verification('The Users /Groups should be set.');
        await WorkflowBuilderHelper.verifyUsersGroupsSelected(user);

        StepLogger.stepId(7);
        StepLogger.step(`Set other desired fields and Click Submit.
            State Triggers Translations.
            Documents can be edited in this state.
            Time Limit
            Goal per Week
            Enter alternative names for the state in those languages. (If configured).`);
        await WorkflowBuilderHelper.setOtherStateOptionsAndSubmit();
        StepLogger.verification('The State should be edited and listed in the Workflow States list.');
        await WorkflowBuilderHelper.verifyCreatedState(stateName);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1290
    it('Verify Set Users in Groups & Users who can process items in this state. - [22336272]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:48 GMT
        StepLogger.caseId = 22336272;

        StepLogger.preCondition('Navigate to Groups & Users');
        await WorkflowBuilderHelper.navigateToGroupsAndUsers(stateName);

        StepLogger.stepId(1);
        StepLogger.step('Click Select next to Groups & Users who can process items in this state.');
        await WorkflowBuilderHelper.clickSelectUsersGroupsButton(true);
        StepLogger.verification('Select Groups/Users window should be displayed.');
        await WorkflowBuilderHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(2);
        StepLogger.step('Click Show All.');
        await WorkflowBuilderHelper.clickShowAll();
        StepLogger.verification('All the available users are listed.');
        await WorkflowBuilderHelper.verifyUsersList();

        StepLogger.stepId(3);
        StepLogger.step(`Enter Search Criteria. Click Search.
            e.g. Author`);
        await WorkflowBuilderHelper.enterNameAndSearch();
        StepLogger.verification('All Users with First Name containing Author should be displayed.');
        await WorkflowBuilderHelper.verifySearchedUsers();

        StepLogger.stepId(4);
        StepLogger.step('Select the desired users using the check box.');
        const user = await WorkflowBuilderHelper.selectSearchedUser();
        StepLogger.verification('The selected users are listed in the Selected Users and Groups list below.');
        await WorkflowBuilderHelper.verifySelectedUserGroup(user);

        StepLogger.stepId(5);
        StepLogger.step('Click OK.');
        await WorkflowBuilderHelper.clickOkUsersGroupsButton();
        StepLogger.verification(`Select Groups/Users window should be closed.
            Authoring Workflow State window should be displayed again.`);
        await WorkflowBuilderHelper.verifyUsersGroupsSelected(user);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1291
    it('Verify Set Groups in Groups & Users who can process items in this state. - [22336290]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:49 GMT
        StepLogger.caseId = 22336290;

        StepLogger.preCondition('Navigate to Groups & Users');
        await WorkflowBuilderHelper.navigateToGroupsAndUsers(stateName);

        StepLogger.stepId(1);
        StepLogger.step('Click Select next to Groups & Users who can process items in this state.');
        await WorkflowBuilderHelper.clickSelectUsersGroupsButton(true);
        StepLogger.verification('Select Groups/Users window should be displayed.');
        await WorkflowBuilderHelper.verifyUsersGroupsDialog(true);

        StepLogger.stepId(2);
        StepLogger.step('Click Show All in Find Groups');
        await WorkflowBuilderHelper.clickShowAllGroups();
        StepLogger.verification('All the available groups should be listed.');
        await WorkflowBuilderHelper.verifyGroupList();

        StepLogger.stepId(3);
        StepLogger.step(`Enter Search Criteria. Click Search.
            e.g. Author`);
        await WorkflowBuilderHelper.enterGroupNameAndSearch();
        StepLogger.verification('All Groups with Name containing Author should be displayed.');
        await WorkflowBuilderHelper.verifySearchedGroups();

        StepLogger.stepId(4);
        StepLogger.step('Select the desired groups using the check box.');
        const group = await WorkflowBuilderHelper.selectSearchedGroup();
        StepLogger.verification('The selected groups are listed in the Selected Users and Groups list below.');
        await WorkflowBuilderHelper.verifySelectedUserGroup(group);

        StepLogger.stepId(5);
        StepLogger.step('Click OK.');
        await WorkflowBuilderHelper.clickOkUsersGroupsButton();
        StepLogger.verification(`Select Groups/Users window should be closed.
            Authoring Workflow State window should be displayed again.`);
        await WorkflowBuilderHelper.verifyUsersGroupsSelected(group);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1294
    it('Verify No in Save Changes when a State is not included as the Next State for any rule. - [22341723]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:50 GMT
        StepLogger.caseId = 22341723;

        StepLogger.preCondition('Navigate to Groups & Users and select state');
        await WorkflowBuilderHelper.navigateToWorkflowBuilder();
        await WorkflowBuilderHelper.selectWorkflowState(stateName);

        StepLogger.stepId(1);
        StepLogger.step('Click Save Changes.');
        await WorkflowBuilderHelper.clickSaveChangesButton();
        StepLogger.verification(`A popup should be displayed  prompting to confirm that you want to delete the states that are not used
            by any workflow rules and that do not currently have any documents in them.`);
        await WorkflowBuilderHelper.verifyDeleteStateWindow();

        StepLogger.stepId(2);
        StepLogger.step('Click No');
        await WorkflowBuilderHelper.clickNoButtonDeleteStateWindow();
        StepLogger.verification('The pop up should be dismissed.');
        await WorkflowBuilderHelper.verifyErrorWindowClosed();

        StepLogger.stepId(3);
        StepLogger.step('Verify the Workflow States');
        StepLogger.verification('The States listed in the popup should not be deleted.');
        await WorkflowBuilderHelper.verifyStateExists(stateName);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });

    // Jira References - KNOV-1295
    it('Verify Delete State on click of Save Changes when a State is not included as the Next State for any rule. - [22341813]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 14:57:49 GMT
        StepLogger.caseId = 22341813;

        StepLogger.preCondition('Navigate to Groups & Users and select state');
        await WorkflowBuilderHelper.navigateToWorkflowBuilder();
        await WorkflowBuilderHelper.selectWorkflowState(stateName);

        StepLogger.stepId(1);
        StepLogger.step('Click Save Changes.');
        await WorkflowBuilderHelper.clickSaveChangesButton();
        StepLogger.verification(`A popup should be displayed  prompting to confirm that you want to delete the states that are not used by any
            workflow rules and that do not currently have any documents in them.`);
        await WorkflowBuilderHelper.verifyDeleteStateWindow();

        StepLogger.stepId(2);
        StepLogger.step('Click Yes');
        await WorkflowBuilderHelper.clickYesButtonDeleteStateWindow();
        StepLogger.verification('The pop up should be dismissed.');
        await WorkflowBuilderHelper.verifyErrorWindowClosed();

        StepLogger.stepId(3);
        StepLogger.step('Verify the Workflow States');
        StepLogger.verification('The States listed in the popup should be deleted.');
        await WorkflowBuilderHelper.verifyStateDeleted(stateName);

        StepLogger.postCondition('Logout');
        await AdminLoginPageHelper.logout(true);
    });
});
