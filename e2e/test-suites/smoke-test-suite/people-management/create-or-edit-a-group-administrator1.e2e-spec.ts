import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { CredentialsHelper } from '../../../components/misc-utils/credentials-helper';
import { ExpectationHelper } from '../../../components/misc-utils/expectation-helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import {
    LanguageManagementPageConstant
} from '../../../page-objects/pages/administer-system/Language-management-page/Language-management-page.constant';
import { ManagePeopleConstant } from '../../../page-objects/pages/manage-people/manage-people.constant';
import { ManagePeopleHelper } from '../../../page-objects/pages/manage-people/manage-people.helper';
import { ManagePeoplePage } from '../../../page-objects/pages/manage-people/manage-people.po';
import { ManagePeople1Helper } from '../../../page-objects/pages/manage-people/manage-people1.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-116
    it('Edit the Supervisor of a Group - [22412916]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 14:17:18 GMT
        StepLogger.caseId = 22412916;
        const attr = ManagePeoplePage.groupCreatorForm;
        const groupName = await PageHelper.getUniqueId();

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition section
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Select" beside the Supervisor label on the Group Creator page');
        await attr.buttons.supervisor.clickButton();
        StepLogger.verification('The Supervisor page is displayed');
        await ManagePeopleHelper.verifyOwnerPopUp();

        StepLogger.stepId(4);
        StepLogger.step('Click on the radio button of the desired Supervisor from the list of supervisors');
        await ManagePeople1Helper.dialogBoxFirstCheckbox();
        StepLogger.verification('The Selected Supervisor radio button is selected');
        await ManagePeopleHelper.verifyAdminUserSelected();

        StepLogger.stepId(5);
        StepLogger.step('Click on "Ok" button');
        await ManagePeople1Helper.clickOk();
        StepLogger.verification(`The Supervisor page is closed and the selected supervisor name is displayed
        beside the "Select" button beside the Superivisor Label`);
        await attr.dialogBox.adminSelectedSupervisor(CredentialsHelper.admin.username).verifyDisplayedStatus();

        StepLogger.stepId(6);
        StepLogger.step('Click on the "Submit" at the bottom of the page');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the User & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit the Members of a Group - [22412917]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 14:53:40 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const groupName = await PageHelper.getUniqueId();
        const amountOfUsers = '1';
        StepLogger.caseId = 22412917;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition section
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Select" beside the Members Label');
        await attr.buttons.members.clickButton();
        StepLogger.verification('The Select Users page is displayed');
        await ManagePeoplePage.titles.selectUsers.verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click the Show All button');
        await ManagePeopleHelper.clickOnShowAllButton();
        StepLogger.verification('All the list of Users is displayed');
        await ManagePeopleHelper.verifyUsersListDisplayedFromFindUsersPopup();

        StepLogger.stepId(5);
        StepLogger.step('Click on the checkbox of the Users to add');
        StepLogger.verification('The Selected Users are displayed in the Selected Users section of the page');
        await ManagePeopleHelper.selectAndVerifyUserFromFindUsersPopup(ManagePeopleConstant.roles.agent.toLowerCase());
        await ManagePeopleHelper.selectAndVerifyUserFromFindUsersPopup(ManagePeopleConstant.roles.contentSupervisor);

        StepLogger.stepId(6);
        StepLogger.step('Click on the "Remove" icon on the User you want to remove from the Selected Users section');
        await ManagePeople1Helper.removeUserInSelectedUsersList(ManagePeopleConstant.roles.agent.toLowerCase());
        StepLogger.verification('The User is removed from the list of Selected Users');
        await ManagePeople1Helper.verifyUserNotInSelectedUsersList(ManagePeopleConstant.roles.agent.toLowerCase());

        StepLogger.stepId(7);
        StepLogger.step('Click on "OK" button');
        await ManagePeople1Helper.clickOkUsersListButton();
        StepLogger.verification(`The Select User page is closed and the number of members is
        updated with the number of users added`);
        await attr.dialogBox.amountSelectedMembers(amountOfUsers).verifyDisplayedStatus();

        StepLogger.stepId(8);
        StepLogger.step('Click on the Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group creator page is closed and the User & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit the Expertise Profile of a Group - [22412918]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 17:48:00 GMT
        const groupName = await PageHelper.getUniqueId();
        const skill = await PageHelper.getUniqueId();
        const attr = ManagePeoplePage.groupCreatorForm;
        const radioButtonIndex = '1';
        const skillLevel = '2.0';
        StepLogger.caseId = 22412918;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the precondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select" button beside the Expertise Profile Label');
        await attr.buttons.expertiseProfile.clickButton();
        StepLogger.verification('The Expertise Profile is opened');
        await ManagePeople1Helper.validateExpertiseOptionTitle(ManagePeopleConstant.titles.expertiseProfile);

        StepLogger.stepId(4);
        StepLogger.step('Input the Description in the General Expertise Description textarea');
        await ManagePeople1Helper.descriptionEnterText(`${groupName} description`);
        StepLogger.verification('The inputted description value is displayed in the textarea');
        await ManagePeople1Helper.descriptionVerifyText(`${groupName} description`);

        StepLogger.stepId(5);
        StepLogger.step('Click on the radio button to select the Agent Level from the options');
        await attr.buttons.radioExpertiseLevel(radioButtonIndex).verifyDisplayedStatus();
        StepLogger.verification('The selected option is selected');
        await attr.buttons.radioExpertiseLevel(radioButtonIndex).clickButton();

        StepLogger.stepId(6);
        StepLogger.step('Click the "Add Metadata" button');
        await attr.buttons.addMetadataButton.clickButton();
        StepLogger.verification('The Add Expertise page is opened');
        await ManagePeople1Helper.validateExpertiseOptionTitle(ManagePeopleConstant.titles.addExpertise, true);

        StepLogger.stepId(7);
        StepLogger.step('Click on "Select" button beside the Metadata Label');
        await attr.buttons.selectMetadataButton.clickButton();
        StepLogger.verification('The Select universal Metadata page is opened');
        await ManagePeoplePage.titles
            .titleValidation(ManagePeopleConstant.titles.selectUniversalMetadata).verifyDisplayedStatus();

        StepLogger.stepId(8);
        StepLogger.step('Click on the Metadata and click "Ok" button');
        const productSelected = await ManagePeople1Helper.selectMetadataAndClickOk();
        StepLogger.verification(`The Selected Metadata record is displayed in the Selected
        textbox and the Universal Metadata page is closed`);
        await ManagePeople1Helper.validateSelectedMetadata(productSelected);

        StepLogger.stepId(9);
        StepLogger.step('Click the Reputation Level dropdown box and select an option');
        await ManagePeoplePage
            .getReputationLevelOption(ManagePeopleConstant.labels.mvpLevel)
            .clickButton();
        StepLogger.verification('The Selected option is displayed in the Dropdown box');
        await ManagePeople1Helper.verifySelectedReputationLevel(ManagePeopleConstant.labels.mvpLevel);

        StepLogger.stepId(10);
        StepLogger.step('Input the a value in the Skill text area');
        await attr.textElement.skill.sendKeys(skill);
        StepLogger.verification('The inputted value is displayed');
        await attr.textElement.skill.verifyTextEntered(skill);

        StepLogger.stepId(11);
        StepLogger.step('Click on the radio button to select a Skill Level');
        await attr.buttons.radioSkillLevel(skillLevel).clickButton();
        StepLogger.verification('The Selected Skill Level is selected');
        await ExpectationHelper.verifySelectedStatus(attr.buttons.radioSkillLevel(skillLevel));

        StepLogger.stepId(12);
        StepLogger.step('Click "Ok" button');
        await attr.dialogBox.okAddExperience.clickButton();
        StepLogger.verification('The Metadata record is added to the list of record on the list');
        await ManagePeople1Helper.verifyAddedMetadata(productSelected);

        StepLogger.stepId(13);
        StepLogger.step('Click the "Submit" button');
        await attr.dialogBox.submitButton.clickButton();
        StepLogger.verification('The Expertise Profile page is closed and the Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(14);
        StepLogger.step('Click the "Submit" button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the User & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();

        await StepLogger.postCondition('Log out of app');
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-116
    it('Edit the Access Level of a Group - [22412919]', async () => {
        // Auto generated by aurea-automation - util on Wed, 27 Feb 2019 22:46:05 GMT
        const labels = ManagePeopleConstant.groupCreatorForm;
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412919;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select" button beside Access Levels Label');
        await ManagePeople1Helper.clickSelectAccessLevel();
        StepLogger.verification('The Select Access Level page is opened');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.accessLevels).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Access Level');
        StepLogger.verification('The Selected Access Level is highlighted');
        await ManagePeople1Helper.selectAndVerifyPublicAccessLevel();

        StepLogger.stepId(5);
        StepLogger.step('Click the Add button');
        StepLogger.verification('The Access level is displayed in the Selected section');
        await ManagePeople1Helper.clickAndVerifyAddPublicAccessLevel();

        StepLogger.stepId(6);
        StepLogger.step('Click "OK"  button');
        StepLogger.verification('The Select Access Level Page is closed and the Access level selected' +
            ' is displayed on the Group creator page');
        await ManagePeople1Helper.clickAndVerifyOkPublicAccessLevel();

        StepLogger.stepId(7);
        StepLogger.step('Click on the "Submit" button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the "User & Group Finder" page is diaplayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit the Languages of a Group - [22412920]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Feb 2019 18:13:29 GMT
        const labels = ManagePeopleConstant.groupCreatorForm;
        const attr = ManagePeoplePage.groupCreatorForm;
        const language = LanguageManagementPageConstant.languages.english;
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412920;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select" button beside the Language Label');
        await attr.buttons.languages.clickButton();
        StepLogger.verification('The Select language page is displayed');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.languages).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Language in the "Available section"');
        await ManagePeople1Helper.clickAvailableLanguage(language);
        StepLogger.verification('The Selected Language is highlighted');
        await ManagePeople1Helper.verifyAvailableLanguageHighlighted(language);

        StepLogger.stepId(5);
        StepLogger.step('Click the forward arrow ">>" button to add the language');
        await ManagePeoplePage.popUps.buttons.addPopUp.clickButton();
        StepLogger.verification('The Selected language is moved to the Included section');
        await ManagePeoplePage.popUps.languagePopUp.includedLanguage(language).verifyDisplayedStatus();

        StepLogger.stepId(6);
        StepLogger.step('Click the "OK" button');
        StepLogger.verification('The Select language page is closed and the Group Creator page is displayed');
        await ManagePeople1Helper.clickAndVerifyOkLanguage(language);

        StepLogger.stepId(7);
        StepLogger.step('Click Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group creator page is closed and the "User & Group Finder" page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit Unified Templates of a Group - [22412921]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Feb 2019 21:52:52 GMT
        const groupName = await PageHelper.getUniqueId();
        const labels = ManagePeopleConstant.groupCreatorForm;
        const attr = ManagePeoplePage.groupCreatorForm;
        const template = ManagePeopleConstant.testData.defTemplate;
        StepLogger.caseId = 22412921;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select" button beside the Unified Templates Label');
        await attr.buttons.unifiedTemplates.clickButton();
        StepLogger.verification('The Select Unified Template page is opened');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.unifiedTemplates).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click on the Template in the Available section');
        await ManagePeople1Helper.clickAvailableTemplate(template);
        StepLogger.verification('The selected template is highlighted');
        await ManagePeople1Helper.verifyAvailableTemplateHighlighted(template);

        StepLogger.stepId(5);
        StepLogger.step('Click the ">>" button to add');
        await ManagePeoplePage.popUps.buttons.addPopUp.clickButton();
        StepLogger.verification('The selected template is moved to the Included section');
        await ManagePeoplePage.popUps.unifiedTemplatesPopUp.includedTemplates(template).verifyDisplayedStatus();

        StepLogger.stepId(6);
        StepLogger.step('Click on the Template in the Included section');
        await ManagePeople1Helper.clickIncludedTemplate(template);
        StepLogger.verification('The selected template is highlighted');
        await ManagePeople1Helper.verifyIncludedTemplateHighlighted(template);

        StepLogger.stepId(7);
        StepLogger.step('Click the "<<" button to remove');
        await ManagePeoplePage.popUps.buttons.removePopUp.clickButton();
        StepLogger.verification('The selected template is removed from the Included section');
        await ManagePeoplePage.popUps.unifiedTemplatesPopUp.includedTemplates(template).verifyHiddenStatus();

        StepLogger.stepId(8);
        StepLogger.step('Click the "OK" button');
        StepLogger.verification('The Select Unified Template page is closed');
        await ManagePeople1Helper.clickAndVerifyOkTemplate();

        StepLogger.stepId(9);
        StepLogger.step('Click the Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group creator page is closed and the "User & Group Finder" page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit the Universal Metadata of a group - [22412922]', async () => {
        // Auto generated by aurea-automation - util on Thu, 28 Feb 2019 23:37:58 GMT
        const groupName = await PageHelper.getUniqueId();
        const labels = ManagePeopleConstant.groupCreatorForm;
        const metadataName = ManagePeopleConstant.testData.defMetadata;
        StepLogger.caseId = 22412922;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Select" button beside the Universal Metadata Label');
        await ManagePeoplePage.groupCreatorForm.buttons.universalMetadata.clickButton();
        StepLogger.verification('The Select Universal Metadata Page is opened');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.universalMetadata).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click the Metadata item and Click the "Add" button');
        await ManagePeople1Helper.clickAddMetadata(metadataName);
        StepLogger.verification('The Selected Metadata is displayed in the Selected Metadata');
        await ManagePeople1Helper.verifySelectedMetadata(metadataName);

        StepLogger.stepId(5);
        StepLogger.step('Click the "OK" button');
        StepLogger.verification('The Select Metadata page is closed and the Metadata selected is displayed on the Group Creator page');
        await ManagePeople1Helper.clickAndVerifyOkMetadata(metadataName);

        StepLogger.stepId(6);
        StepLogger.step('Click the Submit');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group creator page is closed and the "User & Group Finder" page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });
});
