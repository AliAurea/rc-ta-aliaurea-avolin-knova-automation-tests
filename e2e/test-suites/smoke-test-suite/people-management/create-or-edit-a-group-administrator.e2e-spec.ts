import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { CredentialsHelper } from '../../../components/misc-utils/credentials-helper';
import { AdminHomePageHelper } from '../../../page-objects/pages/admin-home-page/admin-home.helper';
import { AdminHomePage } from '../../../page-objects/pages/admin-home-page/admin-home.po';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { CommonPageHelper } from '../../../page-objects/pages/common/common-page.helper';
import { ManagePeopleHelper } from '../../../page-objects/pages/manage-people/manage-people.helper';
import { ManagePeoplePage } from '../../../page-objects/pages/manage-people/manage-people.po';
import { ManagePeople1Helper } from '../../../page-objects/pages/manage-people/manage-people1.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-116
    it('Confirm Group Creator submenu under Manage People - [22412448]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 13:43:17 GMT
        StepLogger.caseId = 22412448;

        StepLogger.preCondition('');
        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click the Burger Icon at the top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu navigation bar is opened at the Left hand side');
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage People" menu item on the LHS of the page');
        await AdminHomePageHelper.clickOnManagePeopleButton();
        StepLogger.verification(`The sub menu of the menu item is displayed for the "Manage People" menu with the following sub menu list
        "Agent Level Manager"
        "Enterprise Reputation Level Manager"
        "Group Creator"
        "User & Group Finder"
        "Role Manager (KCC)"
        "Role Manager (KSS)"
        "User Creator"`);
        await AdminHomePageHelper.verifyManagePeopleSubMenu();

        StepLogger.stepId(4);
        StepLogger.step('Verify the "Group Creator" sub menu is present');
        StepLogger.verification('The Group Creator sub menu is displayed');
        await AdminHomePage.managePeople.groupCreator.verifyDisplayedStatus();
    });

    // Jira References - KNOV-116
    it('View the new Group Creator page - [22412449]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 13:58:03 GMT
        StepLogger.caseId = 22412449;

        StepLogger.preCondition('');
        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click the Burger Icon at the top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu navigation bar is opened at the Left hand side');
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage People" menu item on the LHS of the page');
        await AdminHomePageHelper.clickOnManagePeopleButton();
        StepLogger.verification(`The sub menu of the menu item is displayed for the "Manage People" menu with the following sub menu list
        "Agent Level Manager"
        "Enterprise Reputation Level Manager"
        "Group Creator"
        "User & Group Finder"
        "Role Manager (KCC)"
        "Role Manager (KSS)"
        "User Creator"`);
        await AdminHomePageHelper.verifyManagePeopleSubMenu();

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Group Creator" sub menu');
        await ManagePeoplePage.managePeopleSubmenuOptions.groupCreator.hoverOverAndClick();
        StepLogger.verification('The new Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step(`Verify the following button are present on the Group Creator page
        "Submit"
        "Cancel"`);
        StepLogger.verification('The followings button are present on the Group Creator page');
        await ManagePeopleHelper.verifySubmitCancelButtons();
    });

    // Jira References - KNOV-116
    it('Create a new Group for Employee Applications - [22412454]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 14:33:51 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const groupName = await PageHelper.getUniqueId();
        const groupDescription = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412454;

        StepLogger.preCondition('View the new Group Creator page C22412449');
        await ManagePeopleHelper.navigateToGroupCreator();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Employees Application" radio button option beside the "Group can Access" label');
        await ManagePeopleHelper.clickOnEmployeedApplicationOption();
        StepLogger.verification('The selected radio button is selected');
        await ManagePeopleHelper.verifyEmployeeApplicationOption();

        StepLogger.stepId(2);
        StepLogger.step('Input the Group name value in the "Group Name" textbox');
        await ManagePeople1Helper.groupNameEnterText(groupName);
        StepLogger.verification('The inputted value is displayed in the "Group Name" textbox');
        await ManagePeople1Helper.groupNameVerifyText(groupName);

        StepLogger.stepId(3);
        StepLogger.step('Input a description in the "Description" textarea');
        await ManagePeople1Helper.descriptionEnterText(groupDescription);
        StepLogger.verification('The inputted value is displayed in the Description text area');
        await ManagePeople1Helper.descriptionVerifyText(groupDescription);

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Select" button beside the "Owner"  label');
        await ManagePeople1Helper.buttonOwnerClick();
        StepLogger.verification('The "Owner"  pop up page is displayed with the list of users');
        await ManagePeopleHelper.verifyOwnerPopUp();

        StepLogger.stepId(5);
        StepLogger.step('Click on the radio button beside the Group Owner name');
        await ManagePeople1Helper.dialogBoxFirstCheckbox();
        StepLogger.verification('The selected radio button is displayed');
        await ManagePeopleHelper.verifyAdminUserSelected();

        StepLogger.stepId(6);
        StepLogger.step('Click "Ok" button on the Owner pop page');
        await ManagePeople1Helper.clickOk();
        StepLogger.verification('The selected user name is displayed on the Group Creator page');
        await attr.dialogBox.adminSelectedOwner(CredentialsHelper.admin.username).verifyDisplayedStatus();

        StepLogger.stepId(7);
        StepLogger.step('Click the "Submit" button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the Knova Administrator home page is displayed');
        await AdminHomePage.hamburgerIcon.verifyDisplayedStatus();
    });

    // Jira References - KNOV-116
    it('Verify the User & Group Finder page - [22412457]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 18:09:56 GMT
        StepLogger.caseId = 22412457;

        StepLogger.preCondition('Login Knova Administration successfully refer C22308069');
        await AdminLoginPageHelper.loginAsAdmin();

        StepLogger.stepId(1);
        StepLogger.step('Verify the Landing page is displayed with the name of the Administrator at the top right corner');
        StepLogger.verification('The Name of the Administrator is displayed at the top right corner');
        await AdminHomePageHelper.verifyUserNameAtTheTopRightCorner(CredentialsHelper.admin.username);

        StepLogger.stepId(2);
        StepLogger.step('Click the Burger Icon at the top LHS');
        await AdminHomePage.hamburgerIcon.clickButton();
        StepLogger.verification('The Menu navigation bar is opened at the Left hand side');
        await AdminHomePageHelper.verifySideMenuDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click on the "Manage People" menu item on the LHS of the page');
        await AdminHomePage.sidebar.managePeople.clickButton();
        StepLogger.verification(`The sub menu of the menu item is displayed for the "Manage People" menu with the following sub menu list
        "Agent Level Manager"
        "Enterprise Reputation Level Manager"
        "Group Creator"
        "User & Group Finder"
        "Role Manager (KCC)"
        "Role Manager (KSS)"
        "User Creator"`);
        await AdminHomePageHelper.verifyManagePeopleSubMenu();

        StepLogger.stepId(4);
        StepLogger.step('Click on "User & Group Finder" sub menu item');
        await ManagePeoplePage.managePeopleSubmenuOptions.userAndGroupFinder.clickButton();
        StepLogger.verification('The User  & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();

        StepLogger.stepId(5);
        StepLogger.step('Verify the "Find User" and "Find Group" section is displayed on the page');
        StepLogger.verification('The "Find User" and "Find Group" section are present on the page');
        await ManagePeople1Helper.verifyUserAndGroupFinderTitles();
    });

    // Jira References - KNOV-116
    it('Verify the Group is saved successfully for Employee Applications - [22412460]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 20:07:44 GMT
        const attr = ManagePeoplePage.userGroupFinderForm;
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412460;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('View the "User & Group Finder" page is displayed C22412457');
        await AdminHomePageHelper.navigateToUserGroupFinder(true);

        StepLogger.stepId(1);
        StepLogger.step('Verify the "Find Groups"  section is displayed on the "User & Group Finder" page');
        StepLogger.verification('The "Find Groups" section is displayed on the "User & Group Finder" page');
        await ManagePeoplePage.userGroupFinderForm.findGroups.verifyDisplayedStatus();

        StepLogger.stepId(2);
        StepLogger.step('Input the name of the group created in the "Group Name" textbox in the "Find Groups" section');
        await attr.groupName.sendKeys(groupName);
        StepLogger.verification('The inputted group name is displayed');
        await attr.groupName.verifyTextEntered(groupName);

        StepLogger.stepId(3);
        StepLogger.step('Click the Search icon in the "Find Groups" section');
        await ManagePeoplePage.userGroupFinderForm.searchIconGroup.clickButton();
        StepLogger.verification('The Search result with the group name is displayed');
        await ManagePeople1Helper.findGroup(groupName);

        StepLogger.stepId(4);
        StepLogger.step('Verify the Group name is displayed in the Groups section');
        StepLogger.verification('The created Group name is displayed in the Groups section');
        await ManagePeople1Helper.findGroup(groupName);
    });

    // Jira References - KNOV-116
    it('Edit an existing Group - [22412463]', async () => {
        // Auto generated by aurea-automation - util on Mon, 25 Feb 2019 22:08:55 GMT
        const groupName = await PageHelper.getUniqueId();
        const newGroupName = await PageHelper.getUniqueId();
        const newDescription = '- modified -';

        StepLogger.caseId = 22412463;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition section
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Input a value in the Group Name text box to change the group name');
        await ManagePeople1Helper.groupNameEnterText(newGroupName);
        StepLogger.verification('The inputted text is displayed');
        await ManagePeople1Helper.groupNameVerifyText(newGroupName);

        StepLogger.stepId(4);
        StepLogger.step('Edit the value of the Description textarea');
        await ManagePeople1Helper.descriptionEnterText(newDescription);
        StepLogger.verification('The edited value is displayed in the Description textarea');
        await ManagePeople1Helper.descriptionVerifyText(newDescription);

        StepLogger.stepId(5);
        StepLogger.step('Click the Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('A progress page is displayed and the User & Group Finder page is displayed with the Group name editted');
        await ManagePeople1Helper.findGroup(newGroupName, true);
    });

    // Jira References - KNOV-116
    it('Create a new Group for Customer Applications - [22412546]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 13:36:33 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const groupName = await PageHelper.getUniqueId();
        const groupDescription = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412546;

        StepLogger.preCondition('View the new Group Creator page C22412449');
        await ManagePeopleHelper.navigateToGroupCreator();

        StepLogger.stepId(1);
        StepLogger.step('Click on the "Customer Applications" radio button option beside the "Group can Access" label');
        await ManagePeopleHelper.clickOnCustomerApplicationOption();
        StepLogger.verification('The selected radio button is selected');
        await ManagePeopleHelper.verifyCustomerApplicationOption();

        StepLogger.stepId(2);
        StepLogger.step('Input the Group name value in the "Group Name" textbox');
        await ManagePeople1Helper.groupNameEnterText(groupName);
        StepLogger.verification('The inputted value is displayed in the "Group Name" textbox');
        await ManagePeople1Helper.groupNameVerifyText(groupName);

        StepLogger.stepId(3);
        StepLogger.step('Input a description in the "Description" textarea');
        await ManagePeople1Helper.descriptionEnterText(groupDescription);
        StepLogger.verification('The inputted value is displayed in the Description text area');
        await ManagePeople1Helper.descriptionVerifyText(groupDescription);

        StepLogger.stepId(4);
        StepLogger.step('Click on the "Select" button beside the "Owner"  label');
        await ManagePeople1Helper.buttonOwnerClick();
        StepLogger.verification('The "Owner"  pop up page is displayed with the list of users');
        await ManagePeopleHelper.verifyOwnerPopUp();

        StepLogger.stepId(5);
        StepLogger.step('Click on the radio button beside the Group Owner name');
        await ManagePeople1Helper.dialogBoxFirstCheckbox();
        StepLogger.verification('The selected radio button is displayed');
        await ManagePeopleHelper.verifyAdminUserSelected();

        StepLogger.stepId(6);
        StepLogger.step('Click "Ok" button on the Owner pop page');
        await ManagePeople1Helper.clickOk();
        StepLogger.verification('The selected user name is displayed on the Group Creator page');
        await attr.dialogBox.adminSelectedOwner(CredentialsHelper.admin.username).verifyDisplayedStatus();

        StepLogger.stepId(7);
        StepLogger.step('Click the "Submit" button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the Knova Administrator home page is displayed');
        await AdminHomePage.hamburgerIcon.verifyDisplayedStatus();
    });

    // Jira References - KNOV-116
    it('Create a new Group with blank fields - [22412910]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 13:49:07 GMT
        StepLogger.caseId = 22412910;

        StepLogger.preCondition('View the new Group Creator page C22412449');
        await ManagePeopleHelper.navigateToGroupCreator();

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Creator page is displayed');
        StepLogger.verification('The Group Creator page is displayed successfully');

        // verification for step 2 is covered in step 3
        StepLogger.stepId(2);
        StepLogger.step('Click the "Submit" button at the bottom of the page');
        await ManagePeoplePage.groupCreatorForm.buttons.submit.clickButton();
        StepLogger.verification('A webpage dialog is opened with a message "Group Name Required"');

        StepLogger.stepId(3);
        StepLogger.step('Click the "OK" button on the Webpoage dialog');
        StepLogger.verification('The Webpage is closed and the Group Creator page is displayed');
        await CommonPageHelper.verifyErrorMessageDisplayedAndClosePopup();

        StepLogger.stepId(4);
        StepLogger.step('Verify the Group is not created');
        StepLogger.verification('The Group is not created');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Create a new Group without a value for Group Name - [22412911]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 13:59:22 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const groupDescription = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412911;

        StepLogger.preCondition('View the new Group Creator page C22412449');
        await ManagePeopleHelper.navigateToGroupCreator();

        StepLogger.stepId(1);
        StepLogger.step('Input a description in the "Description" textarea');
        await ManagePeople1Helper.descriptionEnterText(groupDescription);
        StepLogger.verification('The inputted value is displayed in the Description text area');
        await ManagePeople1Helper.descriptionVerifyText(groupDescription);

        StepLogger.stepId(2);
        StepLogger.step('Click on the "Select" button beside the "Owner"  label');
        await ManagePeople1Helper.buttonOwnerClick();
        StepLogger.verification('The "Owner"  pop up page is displayed with the list of users');
        await ManagePeopleHelper.verifyOwnerPopUp();

        StepLogger.stepId(3);
        StepLogger.step('Click on the radio button beside the Group Owner name');
        await ManagePeople1Helper.dialogBoxFirstCheckbox();
        StepLogger.verification('The selected radio button is displayed');
        await ManagePeopleHelper.verifyAdminUserSelected();

        StepLogger.stepId(4);
        StepLogger.step('Click "Ok" button on the Owner pop page');
        await ManagePeople1Helper.clickOk();
        StepLogger.verification('The selected user name is displayed on the Group Creator page');
        await attr.dialogBox.adminSelectedOwner(CredentialsHelper.admin.username).verifyDisplayedStatus();

        // Step 5 verification is covered in step 6
        StepLogger.stepId(5);
        StepLogger.step('Click the "Submit" button at the bottom of the page');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('A webpage dialog is opened with a message "Group name required"');

        StepLogger.stepId(6);
        StepLogger.step('Click the "OK" button on the pop up page');
        await CommonPageHelper.verifyErrorMessageDisplayedAndClosePopup();
        StepLogger.verification('The pop up page is closed and the Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Create a new Group without a selecting a Owner - [22412912]', async () => {
        // Auto generated by aurea-automation - util on Tue, 26 Feb 2019 14:12:57 GMT
        const groupName = await PageHelper.getUniqueId();
        const groupDescription = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412912;

        StepLogger.preCondition('View the new Group Creator page C22412449');
        await ManagePeopleHelper.navigateToGroupCreator();

        StepLogger.stepId(1);
        StepLogger.step('Input group name in the Group Name textbox');
        await ManagePeople1Helper.groupNameEnterText(groupName);
        StepLogger.verification('The inputted value is displayed');
        await ManagePeople1Helper.groupNameVerifyText(groupName);

        StepLogger.stepId(2);
        StepLogger.step('Input a description in the "Description" textarea');
        await ManagePeople1Helper.descriptionEnterText(groupDescription);
        StepLogger.verification('The inputted value is displayed in the Description text area');
        await ManagePeople1Helper.descriptionVerifyText(groupDescription);

        // Step 3 verification is covered in Step 4
        StepLogger.stepId(3);
        StepLogger.step('Click the "Submit" button at the bottom of the page');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('A webpage dialog is opened with a message "Administrative Owner required"');

        StepLogger.stepId(4);
        StepLogger.step('Click the "OK" button on the pop up page');
        await CommonPageHelper.verifyErrorMessageDisplayedAndClosePopup();
        StepLogger.verification('The pop up page is closed and the Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.postCondition('Cancel changes to group');
        await ManagePeople1Helper.clickCancelGroupAndLeavePage();
    });
});
