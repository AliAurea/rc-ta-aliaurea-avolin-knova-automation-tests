import { StepLogger } from '../../../../core/logger/step-logger';
import { PageHelper } from '../../../components/html/page-helper';
import { AdminLoginPageHelper } from '../../../page-objects/pages/admin-login-page/admin-login.helper';
import { CommonPageHelper } from '../../../page-objects/pages/common/common-page.helper';
import { ManagePeopleConstant } from '../../../page-objects/pages/manage-people/manage-people.constant';
import { ManagePeopleHelper } from '../../../page-objects/pages/manage-people/manage-people.helper';
import { ManagePeoplePage } from '../../../page-objects/pages/manage-people/manage-people.po';
import { ManagePeople1Helper } from '../../../page-objects/pages/manage-people/manage-people1.helper';
import { SuiteNames } from '../../helpers/suite-names';

describe(SuiteNames.smokeSuite, () => {
    let loginPageHelper: AdminLoginPageHelper;

    beforeAll(async () => {
        loginPageHelper = AdminLoginPageHelper.getInstance();
        await PageHelper.maximiseBrowser();
        await loginPageHelper.goTo();
    });

    beforeEach(async () => {
        await PageHelper.switchToFirstTab();
        await loginPageHelper.goTo();
        await AdminLoginPageHelper.logout();
    });

    // Jira References - KNOV-116
    it('Edit a Group with an empty name Field - [22412925]', async () => {
        // Auto generated by aurea-automation - util on Fri, 01 Mar 2019 13:43:46 GMT
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412925;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Delete the value in the Group Name textbox');
        await ManagePeoplePage.groupCreatorForm.textElement.groupName.sendKeys('');
        StepLogger.verification('The Group Name value is deleted');
        await ManagePeoplePage.groupCreatorForm.textElement.groupName.verifyTextBoxContains('');

        StepLogger.stepId(4);
        StepLogger.step('Click the Submit Button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('A webpage pop up is displayed with a message "Group Name Required"');
        await ManagePeople1Helper.verifyNoGroupNameErrorWindow();

        StepLogger.stepId(5);
        StepLogger.step('Click "OK" on the pop up page');
        await CommonPageHelper.verifyErrorMessageDisplayedAndClosePopup();
        StepLogger.verification('The Pop up page is closed and the Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.postCondition('Cancel changes to group');
        await ManagePeople1Helper.clickCancelGroupAndLeavePage();
    });

    // Jira References - KNOV-116
    it('Edit the Images Directory of a Group - [22412923]', async () => {
        // Auto generated by aurea-automation - util on Fri, 01 Mar 2019 14:20:01 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const labels = ManagePeopleConstant.groupCreatorForm;
        const folderName = ManagePeopleConstant.testData.defFolderName;
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412923;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select"button beside the Image Directory Label');
        await attr.buttons.imagesDirectory.clickButton();
        StepLogger.verification('The Select Image Folder page is opened');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.imagesDirectory).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click the Browse button');
        StepLogger.verification('The Browse Server webpage is opened');
        await ManagePeople1Helper.selectAndVerifyBrowserForServerWindow();

        StepLogger.stepId(5);
        StepLogger.step('Select a folder from the directory');
        StepLogger.verification('The selected folder is displayed on the Select Image Folder page');
        await ManagePeople1Helper.verifyFolderInList(folderName);

        StepLogger.stepId(6);
        StepLogger.step('Click "OK" button');
        await ManagePeople1Helper.clickOkId();
        StepLogger.verification('The Select Image Folder page is closed and the folder record is updated on the Group Creator page');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Click the Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator is closed and the User & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });

    // Jira References - KNOV-116
    it('Edit the Media Directory of a Group - [22412924]', async () => {
        // Auto generated by aurea-automation - util on Fri, 01 Mar 2019 14:21:01 GMT
        const attr = ManagePeoplePage.groupCreatorForm;
        const labels = ManagePeopleConstant.groupCreatorForm;
        const folderName = ManagePeopleConstant.testData.defMediaFolderName;
        const groupName = await PageHelper.getUniqueId();
        StepLogger.caseId = 22412924;

        StepLogger.preCondition('A Group for Employee Applications is created C22412454');
        await ManagePeople1Helper.createGroupForEmployeeApplication(groupName);
        StepLogger.preCondition('Verify the Group is saved successfully for Employee Applications C22412460');
        await ManagePeople1Helper.searchGroupForEmployeeApplication(groupName);

        // Step 1 is covered in the preCondition block
        StepLogger.stepId(1);
        StepLogger.step('Verify the Group Name is displayed in the Groups section');
        StepLogger.verification('The Group name is displayed in the Groups Section');

        StepLogger.stepId(2);
        StepLogger.step('Click on the Group Name in the Groups Section');
        await ManagePeoplePage.getGroup(groupName).clickLink();
        StepLogger.verification('The Group Creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(3);
        StepLogger.step('Click the "Select" button beside the Media Directory');
        await attr.buttons.mediaDirectory.clickButton();
        StepLogger.verification('The Select Media Folder page is opened');
        await ManagePeoplePage.titles.titleValidation(labels.buttons.mediasDirectory).verifyDisplayedStatus();

        StepLogger.stepId(4);
        StepLogger.step('Click the Browse button');
        StepLogger.verification('The Browse Sever web page is opened');
        await ManagePeople1Helper.selectAndVerifyBrowserForServerWindow();

        StepLogger.stepId(5);
        StepLogger.step('Select the file directory and click "OK" button');
        StepLogger.verification('The selected file directory is displayed in the Select Media Folder page');
        await ManagePeople1Helper.verifyFolderInList(folderName);

        StepLogger.stepId(6);
        StepLogger.step('Click "Ok" button');
        await ManagePeople1Helper.clickOkId();
        StepLogger.verification('The Select Media Folder page is closed  and the Group creator page is displayed');
        await ManagePeopleHelper.verifyGroupCreatorPageDisplayed();

        StepLogger.stepId(7);
        StepLogger.step('Click the Submit button');
        await ManagePeople1Helper.clickSubmitGroup();
        StepLogger.verification('The Group Creator page is closed and the User & Group Finder page is displayed');
        await ManagePeople1Helper.verifyUserAndGroupFinderPageDisplayed();
    });
});
